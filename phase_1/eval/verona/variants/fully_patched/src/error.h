#ifndef error_HEADER
#define error_HEADER
enum {
  SUCCESS = 0,
  ERROR_INSTRUCTION_DECODE,
  ERROR_INVALID_OPERANDS,
  ERROR_AA_TREE_DUPLICATE,
  ERROR_JIT_STORE_IMMEDIATE,
  ERROR_BINARY_TOO_SMALL,
  ERROR_BINARY_CODE_TOO_LARGE,
  ERROR_BINARY_DATA_TOO_LARGE,
  ERROR_LEXER,
  ERROR_STACK_EXHAUSTED,
  ERROR_OOM,
  ERROR_PARSER_INTERNAL,
  ERROR_PARSER_INVALID_SECTION,
  ERROR_PARSER_DUPLICATE_LABEL,
  ERROR_PARSER_LABEL_RESOLVE,
  ERROR_INVALID_ESCAPE_CHAR,
  ERROR_UNTERMINATED_STRING,
  ERROR_STRING_TOO_LONG,
  ERROR_TOO_MANY_INSTRUCTIONS
};
#define ERROR_DESCRIPTION_SIZE 512
extern char error_description[ERROR_DESCRIPTION_SIZE];
const char *describe_error(int error);
void error_init();
#endif