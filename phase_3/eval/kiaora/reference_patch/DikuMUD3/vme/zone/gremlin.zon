/*
filename    gremlin
password    release
changedby   Sender
EmailAdd
request     compile
version     1
END HEADER*/

#include <macros.h>

#define BOLDIN_QUEST     "Boldin's Request"
#define BOLDIN_ONGOING   "Boldin's Request Ongoing"
#define BOLDIN_COMPLETE  "Boldin's Request Complete"

#define BOLDIN_BREAD          "Find Boldin Bread"
#define BOLDIN_BREAD_ONGOING  "Find Boldin Bread Ongoing"
#define BOLDIN_BREAD_COMPLETE "Find Boldin Bread Complete"

#define BOLDIN_WATER          "Find Boldin Water"
#define BOLDIN_WATER_ONGOING  "Find Boldin Water Ongoing"
#define BOLDIN_WATER_COMPLETE "Find Boldin Water Complete"

#define BOLDIN_HANDOFF          "Boldin's Cousin"
#define BOLDIN_HANDOFF_ONGOING  "Boldin's Cousin Ongoing"
#define BOLDIN_HANDOFF_COMPLETE "Boldin's Cousin Complete"

#define BOLDIN_ROGUE           "Boldin Seeking Rogue"
#define BOLDIN_ROGUE_ONGOING   "Boldin Seeking Rogue Ongoing"
#define BOLDIN_ROGUE_COMPLETE  "Boldin Seeking Rogue Complete"

#define ROGUE_QUEST        "Rogue Quest"
#define ROGUE_ONGOING      "Rogue Ongoing"
#define ROGUE_COMPLETE     "Rogue Complete"

#define EXPLORE_ONGOING  "Seeking Bernhard"
#define EXPLORE_COMPLETE "Seeking Bernhard Complete"

#define SOUL_ANCHOR_QUEST     "Soul Anchor Request"
#define SOUL_ANCHOR_ONGOING   "Soul Anchor Request Ongoing"
#define SOUL_ANCHOR_COMPLETE  "Soul Anchor Request Complete"

/* ================================================================== */
/*                                ZONE                                */
/* ================================================================== */
%zone gremlin
lifespan 10
reset RESET_ANYHOW
title "Gremlin Caves@Mainland"
creators {"sender"}

notes
" This is part of the NEW newbie experience. Plentiful HINT 
prompting to address basic navigation and learning about how to play. 
Experience is plentiful for players between levels 1 and 10 (or so). 
Zone also contains other relevant mobs, dils, and items to empower the 
new newbie experience. May consider moving those to newbie.zon *shrug*.<br>" 


help
"<pre><br/>
Gremlins have invaded Barnham's pleasant farmstead. Help him to rid the farm
of these terrible vermin once and for all!<br/><br/>
This zone is intended to provide a soft-launch for new players of all profession. 
Quests, equipment, and experiences are designed to teach what can be expected playing
at higher levels. Zone by Sender.
</div></pre>"

/* ================================================================== */
/*                               DIL                                  */
/* ================================================================== */

%dil

/* The new newbie experience - 2020 edition.



The idea here is to introduce the player to how they will adventure
in a more interactive way than the traditional guide. By initiating a 
series of quests, we can provide the newbie with needed early items
such as food, basic armor, and money. Through the process they will
also learn the basics of communication, navigation, and practicing.
Finally, they will learn how to interface with NPC's to futher their
ability to succeed outside of the supported newbie process.

Shoutout to Jessamine for building the Rogue character and dialog.

-Sender
*/

dilbegin recall charger();
code
{
:start:
heartbeat:=PULSE_SEC*SECS_PER_MUD_DAY/4;
wait (SFB_TICK,(self.equip==WEAR_WIELD));
heartbeat:=PULSE_SEC*5;
sendto ("add charge",self);
goto start;
}
dilend

dilbegin recall mana_drain();
var
    storenum    :   integer;
    charge      :   integer;
	num 		:	integer;
    pwr         :   integer;
	num2		:	integer;
	diff		:	integer;
	mag_skill	:	integer;
    fire        :   integer;
code
{
	pwr := 10;
:init:
	heartbeat := PULSE_SEC*9;
	charge := interrupt (SFB_MSG,((self==activator) and (argument=="add charge")), charge);
:start:
	heartbeat := PULSE_SEC*9;
	wait(SFB_COM, ((self.outside.fighting) and
       (self.equip == WEAR_WIELD)));

	if (self.outside.position != POSITION_FIGHTING)
		goto start;

	if(pwr <= 0)
		goto start;

	fire := rnd(1,50);
	if(fire < 20)
		goto start;

	num2 := rnd(1, 10);
	storenum := self.outside.fighting.mana / (2 * num2);
	mag_skill := self.outside.abilities[ABIL_MAG];
	num2 := rnd(1,110);
	if (mag_skill > num2)
	{
		self.outside.fighting.mana := self.outside.fighting.mana - storenum;
		num := rnd(10,130);
		if (mag_skill > num)
		{
			act("Your $2n sends a surge of energy into your body!"
				,A_ALWAYS, self.outside, self,self.outside.fighting,TO_CHAR);
			act("$3n pales visibly as $3s mana is drained away!"
				,A_ALWAYS, self.outside, self, self.outside.fighting,TO_CHAR);
			act("$1n's $2n glows, energy crackles along $1n's arm!"
				,A_ALWAYS, self.outside, self, self.outside.fighting,TO_REST);
			act("$3n pales visibly as $3s mana is drained away!"
				,A_ALWAYS, self.outside, self, self.outside.fighting,TO_NOTVICT);
			act("You can feel your magic essence being siphoned!"
				,A_ALWAYS, self.outside, self, self.outside.fighting,TO_VICT);

			diff := self.outside.max_mana - self.outside.mana;
			if (storenum < diff)
			{
				self.outside.mana := self.outside.mana + storenum;
				position_update(self.outside);
				goto wait_time;
			}
			else
			{
				self.outside.mana := self.outside.mana + diff;
				position_update(self.outside);
				goto wait_time;
			}
			goto wait_time;
		}
		else
		{
			act("Your $2n glows as it drains mana from $3n!"
				,A_ALWAYS, self.outside, self, self.outside.fighting,TO_CHAR);
			act("$1n's $2n glows as it drains mana from $3n!"
				,A_ALWAYS, self.outside, self, self.outside.fighting,TO_NOTVICT);
			act("$1n's $2n glows as it drains your mana!"
				,A_ALWAYS, self.outside, self, self.outside.fighting,TO_VICT);
			pause;
			goto wait_time;
		}
	}
	else
	{
		act("Your $2n glows slightly as it attempts to battle $3n's will!"
		   ,A_ALWAYS, self.outside, self, self.outside.fighting,TO_CHAR);
		act("$1n's $2n glows slightly in an attempt to battle $3n will!"
		   ,A_ALWAYS, self.outside, self, self.outside.fighting,TO_NOTVICT);
		act("You feel $1n's $2n intruding on your will, you push the assault back!"
		   ,A_ALWAYS, self.outside, self, self.outside.fighting,TO_VICT);
		pause;
		goto wait_time;
	}
	pause;

:wait_time:
	heartbeat:=PULSE_SEC*SECS_PER_MUD_DAY/48;
	wait(SFB_TICK, TRUE);
	pwr := pwr - 1;
	self.outside.mana := self.outside.mana - 1;
	position_update(self.outside);
	act("Your Vorous glows a little as it draws your energy to prepare for battle!"
		,A_ALWAYS, self.outside, self, self.outside.fighting,TO_CHAR);
	act("$1n's grimaces a bit as $1s $2n glows."
		,A_ALWAYS, self.outside, self, self.outside.fighting,TO_REST);
	goto start;

:charge:
	clear (charge);
	if (pwr<12)
	pwr:=pwr+6;
	if (pwr>12) pwr := 12;
	act("Your Vorous hums as it regenerates itself."
		,A_ALWAYS, self.outside, self, self.outside.fighting,TO_CHAR);
	act("$1n's Vorous hums quietly ."
		,A_ALWAYS, self.outside, self, self.outside.fighting,TO_REST);
	goto init;
}
dilend

dilbegin resize();
var
	pc 	: unitptr;
	ar 	: string;
	t : unitptr;
code
{
:start:
	wait(SFB_CMD,(command("wear") and (activator == self.outside) and (argument in self.names)));
	pc := activator;
	ar := argument;
	block;
	act("Your "+self.name+" magically resizes to fit you perfectly.",A_SOMEONE, pc, null, null, TO_CHAR); 
	act("$1n's "+self.name+" magically resizes to fit $1m perfectly.",A_SOMEONE, pc, null, null, TO_REST); 
	self.height := pc.height;
	exec("wear "+self.name, pc);
	quit;
}
dilend



dilbegin rogue_request();
external
   extraptr qstSetDone@quests(qname : string, pc : unitptr);

var
  pc: unitptr;
  exdp: extraptr;

code
{
	heartbeat:= PULSE_SEC*4;

:start:
	wait(SFB_CMD,(activator.type == UNIT_ST_PC) and (BOLDIN_ROGUE_ONGOING in activator.quests) and (activator.position == POSITION_STANDING));

	pc := activator;
	secure(pc, lostpc);

	if (ROGUE_ONGOING in pc.quests)
		goto rogue_ongoing;
	
    pause;
    exec("say Ahoy "+pc.name+". So you be another of Boldin's youngsters then, eh?.", self);
    pause;
	exec("say If he's sent you to me it means he wants you to see what an adventurer has to do to keep the wolf from the door...", self);
	pause;
	exec("say Apart from killing it, of course.", self);
	pause;
	exec("say First things first, boats.", self);
	pause;
	exec("say Running hither and yon on those legs of yours is all well and good but sooner or later you'll need to take to the water.", self);
	pause;
	exec("emote scans the seaward horizon where a galleon can be seen under full sail.", self);
	pause;
	exec("say Ah, how I wish I was there!", self);
	pause;
	exec("emote brushes away an anguished tear but then turns to you with a hopeful smile.", self);
	pause;
	exec("say Hold hard, me hearty. How'd you like to do a favour for an old salt who's down on his luck?", self);
	pause;
	exec("say I could easily rejoin me old crew if I had a boat and the right equipment to get me there safely.", self);
	pause;
	exec("say Perhaps you could fetch a few things for me?", self);
	pause;
	exec("say You might want to make notes of the things I asks for. People round here aren't much minded to repeat themselves when they asks favours of an obliging cove.", self);
	pause;
	exec("say Let me see... I need a boat, of course. There be plenty of boat shops around, and a couple of folk even keep rafts themselves.", self);
	pause;
	exec("say Next I need a nice piece of thick hemp rope. They make good rope up in Whesland.", self);
	pause;
	exec("say I mustn't forget a drop of something to warm me up after a squall. A mug of hobgoblin whiskey will be just the thing. They sells it in their town in the mountains to the south of the King's Road.", self);
	pause;
	exec("emote smacks his lips appreciatively.", self);
	pause;
	exec("say Lastly, I'd like me old serrated cutlass back. I lost it playing cards against those orcs underneath the Midgaard sewers. And if that scurvy knave Branneth says he wants it then don't listen to him. I asked first!", self);
	pause;
	act("<div class='whisper'>Sventer the rogue whispers to you, 'Just <div class='hint'>nod</div> if you'll be happy to help a poor lubber out of the scuppers and back into some honest buccaneering.</div>",A_SOMEONE, pc, null, null, TO_CHAR); 
	
	goto accept_rogue;
	
:accept_rogue:

	wait(SFB_CMD, activator #= pc);
	if (command("nod"))
		goto rogue_accepted; 
	else if (command("shake"))
		goto no_quest;
	else
	{
		act("<div class='whisper'>Sventer the rogue whispers to you, '<div class='hint'>Nod</div> if you agree to help, <div class='hint'>shake</div> your head otherwise.'</div>",A_SOMEONE, pc, null, null, TO_CHAR); 
		goto accept_rogue;
	}

:no_quest:

	exec("say So be it!", self);
	unsecure(pc);
	goto start;

:rogue_accepted:

	pause;
	exec("say Thank ye kindly, mate.", self);
	pause;
	exec("say Some of the boats around aren't exactly cheap though.", self);
	pause;
	exec("say If you can't afford all of my supplies, try roughing up one of those good-for-nothing fishermen on the eastern beach and selling their rods to Fred at the fishing supply store in the harbour market.", self);
	pause;
	exec("say Now look lively and fetch me them things, or I'll miss me ship.", self);
	addextra(pc.quests, {ROGUE_ONGOING}, "");

	unsecure(pc);
	goto start;
	
:rogue_ongoing:

	exdp := ROGUE_ONGOING in pc.quests;
	if(("boat" in exdp.names) and ("cutlass" in exdp.names) and ("rope" in exdp.names))
	{
		subextra(pc.quests, ROGUE_ONGOING);
		addextra(pc.quests, {ROGUE_COMPLETE}, "");
		exdp := qstSetDone@quests(BOLDIN_ROGUE, pc);
		experience(3000, pc);
		act("<br><div class='hint'>Quest Completed!</div>",A_SOMEONE, pc, null, null, TO_CHAR); 
		act("<br><div class='xpgain'>You recieve 3000 experience.</div><br>",A_SOMEONE, pc, null, null, TO_CHAR); 

		exec("say That's the way, me hearty! And did you have to sell any of those fishing rods to pay for me dunnage?", self);
		pause;
		exec("say Even if you didn't this time, you should bear them in mind if you find yourself in a fix in future.", self);
		pause;
		exec("say I'd have done the same already, only I'm not so handy without me trusty cutlass.", self);
		pause;
		exec("emote turns his attention to provisioning his boat, giving you a dismissive wave.", self);
		// give a treasure map to find buried treasure. Treasure dil to be applied to map, faking a load in a room. 
		// small_hill@tower is the treasure room 4gp 32 sp 128 cp. item that is a necklace of mana in some way.
	}

	unsecure(pc);
	goto start;	
:lostpc:

	exec("sigh", self);
	goto start;
}
dilend // END rogue_request

dilbegin rogue_give();
var
	pc: unitptr;
	item: unitptr;
	exdp: extraptr;

code
{
	heartbeat:= PULSE_SEC*3;

:start:

	wait(SFB_DONE, (command("give")) and (target == self) and (ROGUE_ONGOING in activator.quests));

:give:

	pc:= activator;
	item:= medium;
	secure(pc, lostpc);
	exdp:= ROGUE_ONGOING in pc.quests;
	if (("sercutlass@midsewers" == self.inside.symname) and (not(ROGUE_COMPLETE in activator.quests)))
	{
		addstring(exdp.names, "cutlass");
		exec("say Ah-har, matey. That's the very thing!", self);
		destroy(self.inside);
	}
	else if (("rope@korandin" == self.inside.symname) and (not(ROGUE_COMPLETE in activator.quests)))
	{
		addstring(exdp.names, "rope");
		exec("say Ah-har, matey. A strong one at that!", self);
		destroy(self.inside);
	}
	else if (("whisky@hobgob" == self.inside.symname) and (not(ROGUE_COMPLETE in activator.quests)))
	{
		addstring(exdp.names, "whisky");
		exec("say Ah-har, matey. This smells like it could strip the paint off a hull!", self);
		destroy(self.inside);
	}
	else if ((ITEM_BOAT == self.inside.objecttype) and (not(ROGUE_COMPLETE in activator.quests)))
	{
		addstring(exdp.names, "boat");
		exec("say Ah-har, matey. She aint pretty, but she looks to float.", self);
		destroy(self.inside);
	}
	else
	{
		destroy(self.inside);
		exec("say No, "+pc.name +", I dont need this.", self);
		pause;
	}

:rejected:	
	
	unsecure(pc);
	goto start;

:lostpc:

	exec("say bah!", self);
	goto start;
}
dilend // END rogue_give



dilbegin aware boldin_request();
external
   unitptr qstWaitHero@quests(qname : string, pc : unitptr, sl : stringlist, acptfunc : string);
   extraptr qstAssign@quests(qname : string, pc : unitptr, sl : stringlist, qdescr : string);
   unitptr qstWaitDone@quests(qname : string, pc : unitptr,
                             sl : stringlist, xp : integer, gold : integer, itemsl : stringlist);
var
  item: unitptr;
  pc: unitptr;
  exdp: extraptr;
  i : integer;

code
{
	heartbeat:= PULSE_SEC*3;

:start:
   unsecure(pc);
	wait(SFB_CMD,(activator.type == UNIT_ST_PC) and (not (BOLDIN_COMPLETE in activator.quests)));

   if (not (BOLDIN_ONGOING in activator.quests))
      goto boldingo;

	pc := activator;
	secure(pc, lostpc);

   if (not (BOLDIN_BREAD_COMPLETE in pc.quests))
   {
      if (not (BOLDIN_BREAD_ONGOING in pc.quests))
         goto bread;
      else
         goto bread_ongoing;
   }
   else if (not (BOLDIN_WATER_COMPLETE in pc.quests))
   {
      if (not (BOLDIN_WATER_ONGOING in pc.quests))
         goto water;
      else
         goto water_ongoing;
   }
   else if (not (BOLDIN_HANDOFF_COMPLETE in pc.quests))
   {
      if (not (BOLDIN_HANDOFF_ONGOING in pc.quests))
         goto handoff;
      else
         goto handoffdone;
   }
   else if (not (BOLDIN_ROGUE_COMPLETE in pc.quests))
   {
      if (not (BOLDIN_ROGUE_ONGOING in pc.quests))
         goto rogue;
      else
         goto roguedone;
   }

   goto start;

:boldingo: 
	pc := qstWaitHero@quests(BOLDIN_QUEST, activator,
      {"say Ahoy there traveller!",
      "say you look to be somewhat new around here.",
      "whisper $1N I could use some help. And I'm guessing you could as well!",
      "whisper $1N You see, the older I get, the harder it seems it is to get around.",
      "whisper $1N Would you be so kind as to help me out?",
      "whisper $1N Just <a cmd='#'>nod</a> your head, and I'll give you the details.' <div class='cpy'>HINT: Simply type 'nod' and hit enter.</div>"
      }, ""
   );

   if (pc == null)
      goto start;

   secure(pc, lostpc);

   // Boldin Quest accepted

   exdp := qstAssign@quests(BOLDIN_QUEST, pc, 
      {"say Excellent!",
       "clap"},
      "Help Boldin in Udgaard with various quests."
   );

:bread:
   // Bread Quest accepted


   exdp := qstAssign@quests(BOLDIN_BREAD, pc, 
      {"say A man gets hungry in his age.",
      "whisper $1N If you could find a store and <div class='hint'>buy bread</div> for me, it would be well appreciated.",
      "whisper $1N Take this money, and you can keep anything thats left after your purchase.",
      "whisper $1N Use the <a cmd='#'>purse</a> command to check how much money you are carrying.'",
      "whisper $1N A food store can be found west and north of here.",
      "emote gives 2 copper pieces to $1N"},
      "Buy a bread and give it to Boldin."
   );

   // Give money to the player
   i := transfermoney(null, pc, 2 * COPPER_MULT);

	unsecure(pc);
	goto start;

:bread_ongoing:
   pc := qstWaitDone@quests(BOLDIN_BREAD, pc, 
         {"smile $1N",
          "say Quest complete, brave adventurer!",
          "whisper $1N I suspect you'll need these coins sooner or later."},
          500, 2 * COPPER_MULT,{""});
	unsecure(pc);
	goto start;
	


:water:	
   pc  := qstWaitHero@quests(BOLDIN_WATER, pc,
      {"emote quietly chews a chunk of bread.",
      "say Thank you again for that bread, traveller!",
      "say Now, could I ask one more favor?",
      "whisper $1N You see, I'm feeling rather parched.",
      "whisper $1N A dash of water would do me well!",
      "whisper $1N Would you be so kind as to help me out?",
      "whisper $1N Just <a cmd='#'>nod</a> your head, and I'll give you the details.'"}, "");

	act("<div class='hint'>HINT: Simply type 'nod' and hit enter.</div>",A_SOMEONE, pc, null, null, TO_CHAR); 

   if (pc == null)
      goto start;

   // Find a hero to take the water quest
   exdp := qstAssign@quests(BOLDIN_WATER, pc, 
      {"say Excellent!",
      "say I've got the thirst of a man twice my size and with three times my vigor.",
      "whisper $1N Take this barrel, and map.",
      "whisper $1N Simply <a cmd='look map'>look at this map</a> and it will guide you to the nearby city of Midgaard.",
      "whisper $1N At the Midgaard Market Square you will find an obelisk full of water! Simply <a cmd='#'>pour obelisk in barrel</a> to fill it up.'",
      "::$3n hands you an empty barrel and a crumpled map.::$3n hands an empty barrel and a crumpled map to $1n."},
      "Return to Boldin with his barrel full of water. You can fill up the barrel in Midgaard at the Obelisk."
   );

	item := load("water_barrel@gremlin");
	link(item, pc);
	item := load("midgaard_map@gremlin");
	link(item, pc);
	act("<div class='hint'>HINT: Type 'look map' to find directions to Midgaard.</div>",A_SOMEONE, pc, null, null, TO_CHAR); 	

	unsecure(pc);
	goto start;


:water_ongoing:
   pc := qstWaitDone@quests(BOLDIN_WATER, pc, 
         {"smile $1N",
          "emote takes a long drink from the barrel, completely emptying it!",
          "say I think you're going to need these sooner or later",
          "emote quite slips you some coins and gives you an empty barrel."
          },
          500, 2 * COPPER_MULT, {"water_barrel@gremlin"});
	unsecure(pc);
	goto start;


:handoff:
   pc  := qstWaitHero@quests(BOLDIN_HANDOFF, pc,
      {"say Now that was refreshing, $1N!",
      "say A dark rumour has been spreading, and I think you're up to helping with it.",
      "whisper $1N There is word that gremlins have invaded a nearby farmstead!",
      "whisper $1N What do you think, do you have it in you to help?",
      "whisper $1N Just <a cmd='#'>nod</a> your head, and I'll give you the details.'"}, "");

   if (pc == null)
      goto start;

   // Find a hero to take the water quest
   exdp := qstAssign@quests(BOLDIN_HANDOFF, pc, 
      {"say Your help will be well appreciated $1N!",
      "whisper $1N Between Cypress Forest and the City of Midgaard lies a dusty trail.",
      "whisper $1N A small farmstead can be found by heading north on this trail.",
      "whisper $1N Barnham is the master of this farm, and also a distant cousin of mine.",
      "whisper $1N Please go find Barnham, he will warmly welcome you."},
      "Go see Barnham in the farmstead north of a dusty trail between the Cypress forest and Midgaard."
   );

	unsecure(pc);
	goto start;

	
:handoffdone:
   pc := qstWaitDone@quests(BOLDIN_HANDOFF, pc, 
         {"say I see you have returned, $1N.",
          "say I am truly saddened by the news that has reached me.",
          "whisper $1N Bernhard will be deeply missed. He was the last of a long line of heroic adventurers."},
          500, 2 * COPPER_MULT, {""});
	unsecure(pc);
	goto start;

:rogue:
   pc  := qstWaitHero@quests(BOLDIN_ROGUE, pc,
      {
      "whisper $1N Given the state of affairs, I'm afraid I must ask for additional assistance.",
      "whisper $1N Can I count on you for one more request?"
      },"");

   if (pc == null)
      goto start;

   // Find a hero to take the water quest
   exdp := qstAssign@quests(BOLDIN_ROGUE, pc, 
      {"say And so another adventure begins $1N.",
   	  "whisper $1N Away beyond the East gate of Midgaard lies a crossroads.",
        "whisper $1N South from this crossroads, lies the seaside town of Torsbay.",
        "whisper $1N There in Torsbay, a rogue has landed on the shore.",
        "whisper $1N Find this rogue, and mention my name. He will know what to do."
      }, "Find the rogue in Torsbay.");
	unsecure(pc);
	goto start;

:roguedone:
   // Check if BOLDIN_ROGUE is done (qstWaitDone). For now I don't think you've compelted this part?
   goto start;


:no_quest:

	exec("say So be it!", self);
	unsecure(pc);
	goto start;


:lostpc:
   exec("sigh", self);
   goto start;
}
dilend // END boldin_request

dilbegin soul_anchor_qst();
external
  extraptr qstSetDone@quests(qname : string, pc : unitptr);
  unitptr qstWaitDone@quests(qname : string, pc : unitptr,
                             sl : stringlist, xp : integer,
                             gold : integer, itemsl : stringlist);
  extraptr qstAssign@quests(qname : string, pc : unitptr, sl : stringlist, qdescr : string);
var
  item: unitptr;
  pc: unitptr;
  exdp: extraptr;
  mypc: unitptr;

code
{
  heartbeat := PULSE_SEC * 3;

  :start:

    wait(SFB_DONE, (activator.type == UNIT_ST_PC) and (not (SOUL_ANCHOR_COMPLETE in activator.quests)));
    pc := activator;

    if (SOUL_ANCHOR_COMPLETE in pc.quests)
    {
      goto start;
    }

    if (SOUL_ANCHOR_ONGOING in pc.quests)
    {
      goto soul_anchor_ongoing;
    }

    wait(SFB_DONE,(activator.type == UNIT_ST_PC) and command("smile"));

    pc := activator;
    secure(pc, lostpc);

    pause;
    exec("emote sees your smile and cautiously wanders over.", self);
    pause;
    exec("say Hello, adventurer.", self);
    pause;
    exec("emote looks you over appraisingly.", self);
    pause;
    exec("say You have a strong spirit, I think.", self);
    pause;
    exec("say One which could withstand being separated from its body! To die and live again!", self);
    pause;
    exec("cackle", self);
    pause;
    exec("say But...", self);
    pause;
    exec("say If you reincarnate, it could be difficult to find your old body.", self);
    pause;
    exec("say Of course, the easiest thing to do would be to simply go find it.", self);
    pause;
    exec("say But your corpse could wind up in the most inconvient locations!", self);
    pause;
    exec("emote mutters something about giant ants.", self);
    pause;
    exec("say So I've developed a solution!", self);
    pause;
    exec("say A way to anchor your body to your soul, allowing it to come back to you after some time.", self);
    pause;
    exec("say Would you be interested in this technique?", self);
    pause;
    exec("say If so, nod.", self);

    goto accept_explore;

  :accept_explore:
    wait(SFB_DONE, activator.type == UNIT_ST_PC);
    pc := activator;
    if (command("nod"))
    {
      goto anchor_accepted;
    }
    else if (command("shake"))
    {
      goto no_quest;
    }
    else
    {
      act("<div class='whisper'>The shaman says '<div class='hint'>Nod</div> if you agree to help, <div class='hint'>shake</div> your head otherwise.'</div>",A_SOMEONE, pc, null, null, TO_CHAR);
      goto accept_explore;
    }

  :no_quest:

    exec("say Too scared, I suppose.", self);
    exec("shrug", self);
    unsecure(pc);
    goto start;

  :anchor_accepted:
    exec("grin", self);
    pause;
    exec("say Very good.", self);
    pause;
    exec("say To form the anchor, I need the life force of someone powerful.", self);
    pause;
    exec("say Not you or me, of course!", self);
    pause;
    exec("emote coughs awkwardly.", self);
    pause;
    exec("say One of the grumpkins, Gaflaw, is stronger than all the rest.", self);
    pause;
    exec("say Bring me something with his life force!", self);
    pause;
    exec("drool", self);

    // note to self: there's explicitly-set heartbeat before this kicks in
    qstAssign@quests(SOUL_ANCHOR_QUEST, pc,
                     {"This string doesn't seem to be used?"},
                     "seeking Gaflaw's life");
    exec("say Go now, and return when you have what I need.", self);

    unsecure(pc);
    goto start;

  :soul_anchor_ongoing:

    // Due to this being very simple and issues with qstWaitDone / qstItemsWanted,
    // it's just re-implemented here.
    wait(SFB_DONE, command("give") and (target == self));

    pc := activator;
    item := medium;

    secure(pc, lostpc);

    if (item.symname == "heart@gremlin")
    {
      destroy(item);
      exec("grin", self);
      pause;
      exec("emote beckons you over to the corner of the room.", self);
      pause;
      exec("emote holds the heart aloft in one hand while touching your head with the other.", self);
      pause;
      act("You feel a sudden shock! The heart disappears in a flash of light!", A_SOMEONE, pc, null, null, TO_CHAR);
      pause;
      exec("say It is done.", self);
      pause;
      exec("say Your body is linked with your soul!", self);
      pause;
      exec("say When you die, after some time, your corpse will return to where you resurrect.", self);
      pause;
      if (pc.hometown == "temple@udgaard")
      {
        exec("emote mutters 'Probably that temple in udgaard...'", self);
      }
      else
      {
        exec("emote mutters 'Probably your clan house...'", self);
      }
      pause;
      exec("say But remember, it will take some time! It will be faster to find your corpse on your own.", self);
      pause;
      exec("say Now, go forth and die freely!", self);
      pause;
      exec("wave $1n", self);

      // settle rewards
      subextra(pc.quests, SOUL_ANCHOR_ONGOING);
      addextra(pc.quests, {SOUL_ANCHOR_COMPLETE}, "");

      experience(1000, pc);
      sendtext("You earned 1000 experience.<br/>", pc);

    }
    else
    {
      exec("say This isn't the right thing.", self);
      link(medium, activator);
    }

    unsecure(pc);
    goto start;

  :lostpc:
    exec("sigh", self);
    goto start;
}
dilend // END soul_anchor_quest

dilbegin barnham_request();
external
   extraptr qstSetDone@quests(qname : string, pc : unitptr);
var
  item: unitptr;
  pc: unitptr;
  exdp: extraptr;

code
{
	heartbeat:= PULSE_SEC*4;

:start:
	wait(SFB_CMD,(activator.type == UNIT_ST_PC) and (not(EXPLORE_COMPLETE in activator.quests)) and (BOLDIN_HANDOFF_ONGOING in activator.quests));

	pc := activator;
	secure(pc, lostpc);

	if (EXPLORE_ONGOING in pc.quests)
		goto explore_ongoing;
	
    pause;
    exec("say Hello "+pc.name+", Boldin wrote me to say that you'd be coming.", self);
    pause;
	exec("say I'm afraid to say it, but I could use some help!", self);
	pause;
	exec("say My son Bernhard went exploring, and has not returned.", self);
	pause;
	exec("say Whats more, it appears those nasty gremlins have invaded.", self);
	pause;
	exec("say For generations, we have seen one or two periodically attack from their cave to the west.", self);
	pause;
	exec("emote gazes fearfully out the window.", self);
	pause;
	exec("say This appears to be entirely different.", self);
	pause;
	exec("say I fear for his life!", self);
	pause;
	exec("say Do you think you might help?", self);
	pause;
	act("<div class='whisper'>Barnham whispers to you, 'Just <div class='hint'>nod</div> your head, and I'll give you the details.'</div>",A_SOMEONE, pc, null, null, TO_CHAR); 
	
	goto accept_explore;
	
:accept_explore:

	wait(SFB_CMD, activator #= pc);
	if (command("nod"))
		goto explore_accepted; 
	else if (command("shake"))
		goto no_quest;
	else
	{
		act("<div class='whisper'>Barnham whispers to you, '<div class='hint'>Nod</div> if you agree to help, <div class='hint'>shake</div> your head otherwise.'</div>",A_SOMEONE, pc, null, null, TO_CHAR); 
		goto accept_explore;
	}

:no_quest:

	exec("say So be it!", self);
	unsecure(pc);
	goto start;

:explore_accepted:

	pause;
	exec("say Thank you!", self);
	pause;
	exec("say While I live a humble life, I am descended from great adventurers.", self);
	pause;
	exec("say It must be their blood that sent Bernhard off.", self);
	pause;
	exec("say Return here with Bernhard in tow... or with evidence that he will not return.", self);
	pause;
	exec("emote reaches over to the drawers, and with a deft move, opens a false bottom!", self);
	pause;
	exec("emote carefully lifts an object from the drawer, and unwraps it's cloth covering.", self);
	pause;
	exec("say "+pc.name+", this has been handed down to me, for use fending off invading gremlins.", self);
	pause;
	exec("say Along with that old chest of who knows what in the attic, it was my sole inheritance.", self);
	pause;
	if((pc.profession == PROFESSION_PALADIN) or (pc.profession == PROFESSION_FIGHTER) or (pc.profession == PROFESSION_RANGER) or (pc.profession == PROFESSION_KNIGHT))
		item := load("barnham_ls@gremlin");
	if((pc.profession == PROFESSION_THIEF) or (pc.profession == PROFESSION_SORCERER) or (pc.profession == PROFESSION_CONJURER) or (pc.profession == PROFESSION_ASSASSIN) or (pc.profession == PROFESSION_NECROMANCER) or (pc.profession == PROFESSION_DRUID))
		item := load("barnham_dagger@gremlin");
	if((pc.profession == PROFESSION_PRIEST) or (pc.profession == PROFESSION_BARBARIAN))
		item := load("barnham_mace@gremlin");
	item.height := pc.height;
	dilcopy ("ply_restrict@function("+pc.name+",0,25,quest_act@gnome)",item);
	link(item, pc);
	act("<br>Barnham hands you a "+item.name+".<br>",A_SOMEONE, pc, null, null, TO_CHAR); 
	addextra(pc.quests, {EXPLORE_ONGOING}, "");
	pause;
	exec("say Through my door here to the west, you will find my fields.", self);
	pause;
	exec("say Bernhard carries a dagger that once gleamed as that does. I pray it will protect him!", self);
	pause;
	exec("say Beyond the fields a path should lead to the caves.", self);
	act("<div class='hint'>HINT: Use the command 'open west door' to identify and open the appropriate door.</div>",A_SOMEONE, pc, null, null, TO_CHAR); 
	pause;
	exec("say Watch out when you're tangling with those gremlins, by the way. I'd start with the troublesome ones to see how you get on. The vicious ones really are ... well, vicious.", self);
	act("<div class='hint'>HINT: Use the 'consider' command against your enemies to measure their difficulty.</div>",A_SOMEONE, pc, null, null, TO_CHAR); 
	pause;
	pause;

	unsecure(pc);
	goto start;
	
:explore_ongoing:

	exdp := EXPLORE_ONGOING in pc.quests;
	if ("dagger" in exdp.names)
	{
		exec("say I thank you for bringing me this, but please I cant bear to keep it.", self);
		pause;
		exec("emote returns the dagger to you.", self);
		subextra(pc.quests, EXPLORE_ONGOING);
		addextra(pc.quests, {EXPLORE_COMPLETE}, "");
      exdp := qstSetDone@quests(BOLDIN_HANDOFF, pc);
		experience(1000, pc);
		act("<br><div class='hint'>Quest Completed!</div>",A_SOMEONE, pc, null, null, TO_CHAR); 
		act("<br><div class='xpgain'>You recieve 1000 experience.</div><br>",A_SOMEONE, pc, null, null, TO_CHAR); 
		item := load("tarn_dagger@gremlin");
        item.height := pc.height;
		link(item, pc);
		exec("say Return now to Boldin, word is he could use just a bit more help from you.", self);
		pause;
		act("Barnham turns away, and is taken by his grief.",A_SOMEONE, pc, null, null, TO_CHAR); 
	}

	unsecure(pc);
	goto start;	
:lostpc:

	exec("sigh", self);
	goto start;
}
dilend // END barnham_request

/* Barnham Give */

dilbegin barnham_give();
var
	pc: unitptr;
	item: unitptr;
	exdp: extraptr;

code
{
	heartbeat:= PULSE_SEC*3;

:start:

	wait(SFB_DONE, (command("give")) and (target == self) and (activator.type == UNIT_ST_PC) and
		(EXPLORE_ONGOING in activator.quests));

:give:

	pc:= activator;
	item:= medium;
	secure(pc, lostpc);
	exdp:= EXPLORE_ONGOING in pc.quests;

	if ((item.symname == "tarn_dagger@gremlin") and (not(EXPLORE_COMPLETE in activator.quests)))
	{
		addstring(exdp.names, "dagger");
		destroy(self.inside);
		exec("say I see. It is as I feared, then.", self);
		pause;
		exec("cry", self);
		pause;
		exec("say I see. It is as I feared, then.", self);
		pause;
	}
	else
	{
		exec("say Did I ask for this, "+pc.name +"?", self);
		pause;
		exec("say I think not.", self);
		link(self.inside, pc);
	}

:rejected:	
	
	unsecure(pc);
	goto start;

:lostpc:

	exec("say bah!", self);
	goto start;
}
dilend // END barnham_give

/* END New Newbie Dils */

%rooms

farm_house
names {"farm house", "house"}
title "Barnham's Farm House"
descr
"A simple decor furnishes an otherwise relatively non-descript farm house. 
A table with two chairs sit along one side, opposite a stone fireplace. There 
is a side-table with drawers, and not too much else. A wooden ladder leads up 
to a door, through which it seems there is an attic. To the west a door 
leads out to the farm yard, and to the east is Barnham's entry."

movement SECT_INSIDE
ALWAYS_LIGHT
flags {UNIT_FL_INDOORS,UNIT_FL_NO_MOB}

up to farm_attic descr "Barnham's Attic"
keyword{"door"}
open {EX_OPEN_CLOSE,EX_CLOSED};
west to farm_01 descr "Outside Barnham's Farm"
keyword{"door"}
open {EX_OPEN_CLOSE,EX_CLOSED};
east to outside_farm descr "Outside Barnham's Farm"
keyword{"door"}
open {EX_OPEN_CLOSE};

end

farm_attic
names {"farm attic", "attic"}
title "Barnham's Attic"
descr
"A dry and dusty smell tickles your nose as you climb into the attic. 
It seems that Barnham has maintained his roof well, as despite all the 
rain this area is known for, the space free from moisture. A range of 
artifacts that seem somewhat out of place for a simple farmer are 
scattered through the space. A door leads back down."
movement SECT_INSIDE
flags {UNIT_FL_INDOORS}

down to farm_house
keyword{"door"}
open {EX_OPEN_CLOSE,EX_CLOSED};
end


farm_01
names {"farm yard", "farm"}
title "Outside Barnham's Farm"
descr
"Stepping outside of barnham's farmhouse a large well-kept field 
is spread out here. Rich brown soil clumps underfoot, moist from 
the recent rains, and clearly fertile. To the south you see a 
simple well outside the farmhouse, and away to the north west a 
trail leaves the farm and winds into the hills. The door to 
Barnham's farm lies to the east."
movement SECT_FIELD
flags {UNIT_FL_NO_MOB}

west to farm_04 descr "Barnham's Farm";
north to farm_02 descr "Barnham's Farm";
south to farm_06 descr "Barnham's Farm";
east to farm_house descr "Barnham's Farm House"
keyword{"door"}
open {EX_OPEN_CLOSE,EX_CLOSED};
end

farm_02
names {"farm yard", "farm"}
title "On Barnham's Farm"
descr
"A small anvil sits under a covered shed here, where Barnham works 
to maintain the tools of his trade. Along the house a large 
stack of wood stands carefully laid, and a sharp axe leans 
against it. To the south is the entry to Barnham's farmhouse, and 
to the north a small gate sits in the fence separating the north fields. 
Away to the west a trail leads into the hills."
movement SECT_FIELD

west to farm_03 descr "Barnham's Farm";
north to fn_02 descr "Barnham's Carrot Field";
south to farm_01 descr "Outside Barnham's Farm";
end

farm_03
names {"farm yard", "farm"}
title "On Barnham's Farm"
descr
"Here on the west end of Barnham's farm the rich soil underfoot 
has been recently tilled to prepare for planting. Away to the east 
Barnham's farmhouse sits solidly overlooking the land. North of here 
the fence separates the north field, and the freshly tilled soil runs 
away to the south. West of here, a small path leads into the hills."
movement SECT_FIELD

west to fpath_01 descr "A small path";
south to farm_04 descr "Barnham's Farm";
east to farm_02 descr "Barnham's Farm";
end

farm_04
names {"farm yard", "farm"}
title "On Barnham's Farm"
descr
"Here on the west end of Barnham's farm the rich soil underfoot 
has been recently tilled to prepare for planting. Away to the east 
Barnham's farmhouse sits solidly overlooking the land. The entry 
to the farmhouse looks welcoming after a long day of work. North and south 
of here the freshly tilled soil is turned and prepared for planting. 
The farms western fence blocks travel to the west."
movement SECT_FIELD

north to farm_03 descr "Barnham's Farm";
south to farm_05 descr "Barnham's Farm";
east to farm_01 descr "Barnham's Farm";
end

farm_05
names {"farm yard", "farm"}
title "On Barnham's Farm"
descr
"Here on the west end of Barnham's farm the rich soil underfoot 
has been recently tilled to prepare for planting. To the east 
Barnham's farmhouse sits solidly overlooking the land. A small well 
is there, outside the home. North of here the freshly tilled soil 
is turned and prepared for planting. The farms western fence blocks 
travel to the west. To the south, a wide gate leads to the southern 
fields, where tall corn stalks sway in the light breeze."
movement SECT_FIELD

north to farm_04 descr "Barnham's Farm";
south to fs_01 descr "Barnham's Corn Field";
east to farm_06 descr "Barnham's Farm";
end

farm_06
names {"farm yard", "farm"}
title "On Barnham's Farm"
descr
"Outside the farmhouse, the air is fresh, and dark soil leaves clear 
imprints where you step. A simple well rests here, well-built but 
unadorned. It looks deep and smells fresh. South of here a fence 
separates the southern corn field, though a gate lies to the west. 
Travel to the north will leave you at the welcoming entry to the farmhouse."
movement SECT_FIELD

north to farm_01 descr "Outside Barnham's Farm";
west to farm_05 descr "Barnham's Farm";
end

fn_01
names {"farm yard", "farm"}
title "Barnham's Carrot Field"
descr
"Here in Barnham's north field, carrots spot the rich dark soil. It is 
clear that the land has been well maintained, and that it provides well 
for Barnham, delivering value for his clearly diligent labor. A fence 
blocks travel to the west, and separates the southern field in that direction. 
A visibile path sits on the other side of it leading to the western hills. 
North and east the carrot field continues."
movement SECT_FIELD

north to fn_03 descr "Barnham's Carrot Field";
east to fn_04 descr "Barnham's Carrot Field";
end

fn_02
names {"farm yard", "farm"}
title "Barnham's Carrot Field"
descr
"Barnham's northern fields are well-kept and dotted with carrots. It is 
clear that the fields are well kept. A strong fence opens to a wide gate 
here leading to the south. North, east, and west, carrots dot the ground. 
Far to the east some hills rise into the distance, and far to the west is 
Barnham's farmhouse. "
movement SECT_FIELD

north to fn_04 descr "Barnham's Carrot Field";
west to fn_01 descr "Barnham's Carrot Field";
south to farm_02 descr "Barnham's Farm";
east to fn_06 descr "Barnham's Carrot Field";
end

fn_03
names {"farm yard", "farm"}
title "Barnham's Carrot Field"
descr
"Barnham's northern fields are well-kept and dotted with carrots. It is 
clear that the fields are well kept. A strong fence opens to a wide gate 
here leading to the south. North, east, and west, carrots dot the ground. 
Far to the east some hills rise into the distance, and far to the west is 
Barnham's farmhouse."
movement SECT_FIELD

south to fn_01 descr "Barnham's Carrot Field";
east to fn_04 descr "Barnham's Carrot Field";
end

fn_04
names {"farm yard", "farm"}
title "Barnham's Carrot Field"
descr
"Barnham's northern fields are well-kept and dotted with carrots. A 
strong earthy smell fills your nostrils, and a light breeze tickles the 
air. It is clear that the fields are well kept. A strong fence blocks 
travel to the north. South, east, and west, carrots dot the ground. 
Far to the east some hills rise into the distance, and away to the west is 
Barnham's farmhouse."
movement SECT_FIELD

west to fn_03 descr "Barnham's Carrot Field";
south to fn_02 descr "Barnham's Carrot Field";
east to fn_05 descr "Barnham's Carrot Field";
end

fn_05
names {"farm yard", "farm"}
title "Barnham's Carrot Field"
descr
"Barnham's northern fields are well-kept and dotted with carrots. A 
strong earthy smell fills your nostrils, and a light breeze tickles the 
air. It is clear that the fields are well kept. A strong fence blocks 
travel to the north and east. South and west of here, carrots dot the ground. 
Far to the east some hills rise into the distance, and away to the south west 
is Barnham's farmhouse."
movement SECT_FIELD

west to fn_04 descr "Barnham's Carrot Field";
south to fn_06 descr "Barnham's Carrot Field";
end

fn_06
names {"farm yard", "farm"}
title "Barnham's Carrot Field"
descr
"Barnham's northern fields are well-kept and dotted with carrots. As 
you step, deep footprints are left in the loose soil. Travel to the east 
is blocked by the fence that encloses these fields, which wraps to the south 
separating the carrot fields from the work shed. North and west of here, 
carrots dot the ground. Far to the east some hills rise into the distance."
movement SECT_FIELD

north to fn_05 descr "Barnham's Carrot Field";
west to fn_02 descr "Barnham's Carrot Field";
end

fs_01
names {"farm yard", "farm"}
title "Barnham's Corn Field"
descr
"Tall corn stalks sway against you as the light breeze pushes them this way 
and that. The rows of corn grow out of loose dark soil, and are alternated with 
well traveled paths where Barnham walks through a maintains the field. North of 
here the gate separating fields appears to be well maintaintained, and strong. 
The fence runs along both east, and west, ultimately encircling the growth of 
corn. Travel is possible to the north, south, east, and west."
movement SECT_FIELD

north to farm_05 descr "Barnham's Farm";
west to fs_05 descr "Barnham's Corn Field";
south to fs_03 descr "Barnham's Corn Field";
east to fs_02 descr "Barnham's Corn Field";
end

fs_02
names {"farm yard", "farm"}
title "Barnham's Corn Field"
descr
"Tall corn stalks sway against you as the light breeze pushes them this way 
and that. An earthy smell meets your nostrils with each step, and you note 
footprints being left even between the rows of corn. The soil is damp and rich. 
The rows of corn grow out of loose soil, and appear to be healthy, and nearly 
ready for harvest. North of here the fence runs away to the west, and takes a 
turn south preventing travel to the east. Travel through the corn field is 
possible to the south, and west."
movement SECT_FIELD

west to fs_01 descr "Barnham's Corn Field";
south to fs_04 descr "Barnham's Corn Field";
end

fs_03
names {"farm yard", "farm"}
title "Barnham's Corn Field"
descr
"Tall corn stalks sway against you as the light breeze pushes them this way 
and that. As you step, a flurry of motion catches your eye, and you just catch  
a small bunny disappearing between the rows of corn. It is clear looking around 
that Barnham cares deeply for his land, and crop. Everywhere are the signs of 
hard work, and a well-kept field. Travel is blocked to the south by the fence 
surrounding the farm. North, east, and west the rows of corn continue."
movement SECT_FIELD

north to fs_01 descr "Barnham's Corn Field";
west to fs_06 descr "Barnham's Corn Field";
east to fs_04 descr "Barnham's Corn Field";
end

fs_04
names {"farm yard", "farm"}
title "Barnham's Corn Field"
descr
"Tall corn stalks sway against you as the light breeze pushes them this way 
and that. The tall corn stalks appear to be nearly ready for harvest, Barnham 
will have his hands full in the coming days. It is clear looking around 
that Barnham cares deeply for his land, and crop. Everywhere are the signs of 
hard work, and a well-kept field. Travel is blocked to the south and east by 
the fence surrounding the farm. North, west the rows of corn continue."
movement SECT_FIELD

north to fs_02 descr "Barnham's Corn Field";
west to fs_03 descr "Barnham's Corn Field";
end

fs_05
names {"farm yard", "farm"}
title "Barnham's Corn Field"
descr
"Strong tall corn stalks block much view beyond whats right here. You can make 
out the fence surrounding Barnham's farm to the immediate north and west. 
Somewhere, the sound of a crow exulting in finding a trinket is emerging to 
break the otherwise peaceful quiet. South and east of here the corn fields 
extend beyond your view."
movement SECT_FIELD

south to fs_06 descr "Barnham's Corn Field";
east to fs_01 descr "Barnham's Corn Field";
end

fs_06
names {"farm yard", "farm"}
title "Barnham's Corn Field"
descr
"Here in the far corner of Barnhams farm, a peaceful quiet can be found. 
Indeed, a small bench sits here among the rows of corn. It appears as if 
Barnham himself has taken advantage of the solitude offered, and spent time 
reflecting in its well-worn seat. The fence surrounding the fields blocks 
travel to the south and west, while rows of corn block sight as they extend to 
the north and east."
movement SECT_FIELD
north to fs_05 descr "Barnham's Corn Field";
east to fs_03 descr "Barnham's Corn Field";
extra {"small bench", "bench"}
"A small wooden bench, sturdy but well used rests among the corn."
end

outside_farm
names {"farm yard", "farm"}
title "Outside Barnham's Farm"
descr
"You stand before Barnham's farmhouse, a small haven sitting at the edge of a 
large field that extends beyond it. It is a well-constructed home, with 
amenities to support the operations and maintainance of the property. A small 
farm cart rests along one side of the front door. Beyond, in the distance 
to the north and west, some hills rise up obscuring the horizon. Away to the 
south and east you know lies the city of Midgaard."
movement SECT_FIELD

west to farm_house descr "Barnham's Farm House"
keyword{"door"}
open {EX_OPEN_CLOSE};
east to trail_02 descr "Outside the Farm House";
extra {"farm cart", "cart"}
"A simple four-wheeled farm cart is here, ready to carry the harvest to market."
end

trail_01
names {"dusty trail", "trail"}
title "On a Dusty Trail"
descr
"Gravel, sand and dust makes this desert like trail, which leads north from the 
path ultimately connecting to the city of Midgaard to the east, and Udgaard far 
away to the west beyond the Cypress Forest. As you travel to the north, the 
well-traveled becomes less dusty, and more firmly-packed. The trail continues 
to the north, where some distance away you can make out a farm house. 
Travelling south from here will return you to the Dusty Trail west of Midgaard."
movement SECT_CITY

north to trail_02 descr "On a Well-Worn Trail";
south to trail1@cypress descr "Dusty Trail";

end

trail_02
names {"well worn trail", "trail"}
title "On a Well-Worn Trail"
descr
"The gravel and dust that had greeted you to the south give way to a darker and 
richer soil which make for a well-packed and easy to travel trail. West of here 
a cheery farmstead looks welcomingly on to the trail. Rich fields extend beyond 
it to the cypress trees which make way for hills rising beyond. A rocky 
outcropping prevents travel to the east, while north of here, the hills give 
way, and you can just make out the entrance to a cave. Travel to the south will 
return you to the Dusty Trail west of Midgaard."
movement SECT_CITY

west to outside_farm descr "Outside the Farm House";
south to trail_01 descr "Dusty Trail";
north to cave_00 descr "Inside the Cave";
up open {EX_CLIMB} difficulty 0 to outcropping;
extra {"$climb_up"} {5} ""
extra {"rocky outcropping", "rocks", "outcropping"}
"A tall rocky outcropping is here. It would take one both extremely skilled, 
and either brave or stupid to try to climb the steep faces."
end

outcropping
names {"rocky outcropping", "outcropping"}
title "On The Rocky Outcropping"
descr
"Perched from this vantage, a broad array of landscape is highlighted in 
the surrounding area. To the east the city of Midgaard sprawls widely with 
its collection of guilds, offices, and shops. West of here the Cypress 
Forest makes way to the village of Udgaard and its famous shrine to Odin. 
To the north hills connect the landscape, and provide a lovely backdrop for 
the small farm arrayed below you."
movement SECT_CITY

north to entrance@barbarian descr "Entrance to the Hall of the Barbarians";
down open {EX_CLIMB, EX_FALL_THIS_WAY} difficulty 0 to trail_02;
extra {"$climb_down"} {5} ""
extra {"rocky outcropping", "rocks", "outcropping"}
"The rocky outcropping you're on seems to be just possible to climb down.
It seems to be the only way back down."


end


fpath_01
names {"smail path", "path"}
title "On a small path"
descr
"A small dirt path leads away from the farm, and towards the hills to the 
west. While it appears to have fallen to disuse in recent times, there are 
signs of recent travel everywhere. Here some trampled bushes, there the 
remains of some food left to the birds. Travel is possible only along 
the trail to both the east returning to Barnham's farm, and west towards 
the hills."
movement SECT_CITY

east to farm_03 descr "On Barnham's Farm";
west to fpath_02 descr "A small path";
end

fpath_02
names {"smail path", "path"}
title "On a small path"
descr
"The dirt path continues winding towards the hills, slowly gaining some 
elevation as you travel west and north. While still the evidence of  
disuse in recent times is clear, more and more often clear signs of 
recent travel everywhere. Here some trampled bushes, there the remains 
of some food left to the birds. Travel is possible only along the trail 
to both the east leading towards Barnham's farm, and where it turns 
north to take a more pointed march into the hills."
movement SECT_CITY

east to fpath_01 descr "A small path";
north to fpath_03 descr "A small path";
end

fpath_03
names {"smail path", "path"}
title "Climbing a small path"
descr
"The path begins to climb steeply here into the hills as one travels to 
the north from Barnham's farm, which is now seeming small and distant 
away to the south and east. The foliage that was in places almost obscuring 
the path below, has made way to rocky terrain and loose footing. Yet still, 
it is clear that this old path has seen recent use. Indication of feet 
giving out and sliding on the loose gravel can be seen in one place, and in 
another, an old worn-out water sack is tossed to the side. Up and to the 
north, there is a cave which can be seen opening into darkness. To the 
south the path returns to lower elevation and ultimately the farm."
movement SECT_CITY

north to fcave_01 descr "Before a cave";
south to fpath_02 descr "A small path";
end

fcave_01
names {"before cave"}
title "Before the Cave"
descr
"To the west a relatively large cave opens up. Three or four men could 
comfortably walk into this cave abreast, though in the darkness it's not 
clear how deep the cave goes. A cool draft can be felt emerging from 
within the cave, and a slightly acrid smell accompanies it. In the 
immediate surrounding, clear remains of a group having made camp here 
in the recent past. The remains of a burned-out fire are surrounded by 
well compacted earth. Remains of food and drink are being picked through 
by crows, hopping around and enjoying their find. The trail returns south 
down towards the farm."
movement SECT_CITY
flags {UNIT_FL_NO_MOB}

west to fcave_02 descr "Inside the cave";
south to fpath_03 descr "A small path";
end

fcave_02
names {"inside cave", "cave"}
title "Junction in the Cave"
descr
"Stepping into the cave the fresh air of the hills is replaced by a slightly 
dank and somewhat acrid smell. Cool air can be felt moving towards the exit, 
though it brings with it more reek. The ground is firm beneath your feet, 
and from the darnkess, sounds of... something. This cave does not have the 
comforting feel of a safe place. It seems there are two paths leading deeper 
into this cave, one to the south, the other to the west. Exiting the cave to 
the east will lead towards the trail from Barnham's farm."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

south to fcave_04 descr "Inside the cave";
east to fcave_01 descr "Before a cave";
west to fcave_03 descr "A small path";
end

fcave_03
names {"inside cave", "cave"}
title "Inside the Cave"
descr
"The dark and dank floods your senses. Sounds that come from everywhere and 
nowere reach your ears on a continual basis. The slapping of feet. The scrape 
of things being moved around. You are not alone in here. Returning to the 
junction to the east seems the safest path, though the cave moves deeper to 
the north."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

north to fcave_05 descr "Junction in the cave";
east to fcave_02 descr "Junction in the cave";
end

fcave_05
names {"inside cave", "cave"}
title "Junction in the Cave"
descr
"Here, another junction point in this maze of caves opens up. The dark and 
dank continues to flood your senses. Still, sounds come from everywhere and 
nowere at once. The slapping of feet. The scrape of things being moved around. 
You are not alone in here. The cave splits here to the north, east, and south. 
It's no longer clear which path leads where."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

north to fcave_06 descr "Inside the cave";
south to fcave_03 descr "Inside the cave";
east to fcave_07 descr "Inside the cave";
end

fcave_06
names {"inside cave", "cave"}
title "Inside the Cave"
descr
"With dispair you find that the path of the cave you had been traveling down 
has come to an end. This space, while closing off the path and preventing 
further travel, is certainly not empty. There are... remains here. The smell 
is somewhat overwhelming, and a sickness crawls in your gut. Everything inside 
of you screams to leave this place and return to the south."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

south to fcave_05 descr "Inside the cave";
end

fcave_07
names {"inside cave", "cave"}
title "A Tunnel in the Cave"
descr
"As you crawl through this narrow tunnel, the space feels stifling. The acrid 
reek that permeates these caves does nothing to help the onset of 
claustrophobia. To further add to the discomfort, from above you a steady drip 
has made this tunnel wet. If you work carefully you can return from where you 
came. Similarly you may be able to continue through, and it seems things open 
up just ahead."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

west to fcave_05 descr "Inside the cave";
east to fcave_08 descr "Inside the cave";
end

fcave_08
names {"inside cave", "cave"}
title "A Large Cavern"
descr
"The narrow tunnel opens here into a large cavern. The ceiling climbs up and 
becomes lost in the darkness high above. Here and there, a steady heartbeat of 
a water dripping can be heard as the moisture falls from distant stalactites. 
The darnkess feels complete and almost smothering, and every noise echoes 
through the space. And noises there are. There are things moving in the 
darnkess, somewhere. It seems that the cavern contiues north, or back through 
the narrow passage west."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

north to fcave_09 descr "Inside the cave";
west to fcave_07 descr "Inside the cave";
end

fcave_09
names {"inside cave", "cave"}
title "Inside the Cave"
descr
"The large cavern disappears into the darkness high above. Here and there, a 
steady heartbeat of a water dripping can be heard as the moisture falls from 
distant stalactites. The darnkess feels complete and almost smothering, and 
every noise echoes through the space. Somewhere, there are things moving in 
the darnkess. It seems that the cavern contiues south and east."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

south to fcave_08 descr "Inside the cave";
east to fcave_12 descr "Inside the cave";
end

fcave_04
names {"inside cave", "cave"}
title "Inside the Cave"
descr
"The darnkess here encompasses you, and within it, sounds of... something. 
This cave does not have the comforting feel of a safe place. It seems the 
cave winds and turns as you follow this path. The air that was flowing 
in other parts of the cavern, seems to be stale here, and the smell is 
rather unpleasant. The path continues to the west, and returns to the north."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

north to fcave_02 descr "Inside the cave";
west to fcave_10 descr "Inside the cave";
end

fcave_10
names {"inside cave", "cave"}
title "Inside the Cave"
descr
"The darnkess here encompasses you, and within it, sounds of... something. 
This cave does not have the comforting feel of a safe place. The ground 
underfoot is wet, whether from moisture leaking through the cave or otherwise 
is impossible to tell with the little available light. The air that was flowing 
in other parts of the cavern, seems to be stale here, and the smell is 
rather unpleasant. The path continues to the west and east from here."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

east to fcave_04 descr "Inside the cave";
west to fcave_11 descr "Dead End";
end

fcave_11
names {"inside cave", "cave"}
title "Dead End"
descr
"Suddenly the cave that seemed like it may continue winding through the hills 
forever, comes to an abrupt end. Travel is no longer possible along this trail. 
The stale rank air in this end of the cave is overwhelming, where that smell 
comes from, is perhaps better not explored. The damp accumulates into pools 
here and you suspect that they may be related to the smell. The sounds of 
something, or someone moving in the darnkess leaves hair raised on end."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

east to fcave_10 descr "Inside the cave";
end

fcave_12
names {"inside cave", "cave"}
title "Dead End"
descr
"Suddenly the cave that seemed like it may continue winding through the hills 
forever, comes to an abrupt end. A slight draft, and with it the welcome aroma 
of fresh air, tickles the senses here. The cave wall before you is evidently 
the end of the path. Where is that fresh air coming from however. The rocks on 
the cave wall may be worth looking at further. The damp accumulates into pools 
here and you suspect that they may be related to the smell. The sounds of 
something, or someone moving in the darnkess leaves hair raised on end."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

west to fcave_09 descr "Inside the cave";
east to fcave_13 descr "Inside the cave"
keyword {"rock wall","rocks","rock"}
key nokey
open {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN};
extra {"cave wall","wall"}
"The wall here is made of piled rocks, as if they were placed here 
intentionally. I wonder what a more careful search the rock wall 
would reveal?<br><div class='hint'>HINT: Try 'search rock wall' here.</div>"
end

fcave_13
names {"inside cave", "cave"}
title "Hidden Room"
descr
"After entering through the hidden door, it's clear why this was a 
secret. It appears to be a treasure room, where the gremlins, grumpkins, 
and their ilk have stored generations of loot and trinkets. Piled rocks 
sit against the east and west walls, and to the north there is a 
pile weapons and armours, likely taken from the fallen. Weapons, gemstones 
and other valuables are scattered about."
movement SECT_CITY
flags {UNIT_FL_INDOORS, UNIT_FL_NO_MOB}

west to fcave_12 descr "Dead End"
keyword {"rock wall","rocks","rock"}
key nokey
open {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN};
east to cave_01 descr "Inside the cave"
keyword {"rock wall","rocks","rock"}
key nokey
open {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN};
extra {"cave wall","wall"}
"The wall here is made of piled rocks, as if they were placed here 
intentionally. I wonder what a more careful search of the rock wall 
would reveal?"
end

cave_01
names {"inside cave", "cave"}
title "A Small Shrine"
descr
"The light from outside fades as you move further into the cave. It 
appears however that this is a dead end. A small shrine has been placed 
here along one wall, laying praise to unknown gods. The back cave wall  
evidently forms the end of the path. A waft of rank air tickles the senses, 
where did that come from? A few pieces of broken pottery are piled in one 
corner of the cave. The soft-packed ground here looks to be a 
comfortable and welcoming place to rest a while."
movement SECT_CITY
flags {UNIT_FL_INDOORS, UNIT_FL_NO_MOB, UNIT_FL_SACRED}

east to cave_00 descr "Inside the cave";
west to fcave_13 descr "Dead End"
keyword {"rock wall","rocks","rock"}
key nokey
open {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN};
extra {"cave wall","wall","rocks"}
"The wall here is made of piled rocks, as if they were placed here 
intentionally. I wonder what a more careful search of the rock wall 
would reveal?"
extra {"broken pottery","pottery"}
"A few pieces of broken pottery are piled in a corner. Some are half-buried 
and it seems more yet has been buried just beneath the surface.<br>
<div class='hint'>HINT: Try the command 'dig' here.</div>"
end

cave_00
names {"inside cave", "cave"}
title "Inside the Cave"
descr
"The well-packed and easy to travel trail ends here and opens into a 
small cave entrance to the west. The fresh air and sounds of the Cypress 
trees in the breeze fade as the cool cave air seems to flow out of the 
darkness. The trail returns south towards the farm, and continues east 
into the cave."
movement SECT_CITY
flags {UNIT_FL_INDOORS}

south to trail_02 descr "Dusty Trail";
west to cave_01 descr "A Small Shrine";
end

%mobiles

boldin
names {"Boldin","man"}
title "Boldin the wise"
descr "Boldin the wise is here."
extra {}
"Boldin The Wise as he is known. A slim elderly man, Boldin definitely didnt 
make it through life by blade or hammer. The look of one well studied, and 
with a deep smile, you can appreciate the clear evidence that his alternative 
path through life has been effective."
M_AVG_HUMAN(199, SEX_MALE)
alignment 1000
bright 4
ATTACK_DEFENSE(+500, +500)
position POSITION_STANDING
default POSITION_STANDING
dilcopy newbie_nokill@newbie();
dilcopy newbie_nospl@newbie();
dilcopy boldin_request@gremlin();

dilcopy qstItemsWanted@quests(BOLDIN_BREAD, {"bread@midgaard"}, {""},
		{"say Ahh, delicious! Thank you $1N.","emote eats the bread."}, 
       "say Please bring me a bread from Rosanne's bakery.");

dilcopy qstItemsWanted@quests(BOLDIN_WATER, {"water_barrel@gremlin"}, {"fluidcheck@quests 24"},
		{"say A barrel full of water. Thank you $1N."},
      "say Please bring me back my barrel filled with water.");

// dilcopy boldin_give@gremlin();

end

anchorman
names {"shaman", "gremlin"}
title "the shaman"
descr "A gremlin in dark robes stands in the corner."
extra {}
"Small and ugly like the rest of the gremlins, this one looks a little less hostile than the rest. It briefly makes eye contact with you with a questioning expression on its face before looking away. Perhaps a smile would show you mean no harm?"
M_AVG_GOBLIN(30, SEX_FEMALE)
alignment -500
money 2 COPPER_PIECE
dilcopy soul_anchor_qst@gremlin();

end

barnham
names {"barnham","man"}
title "Farmer Barnham"
descr "Farmer Barnham is here."
extra {}
"Farmer Barnham strides about, clearly agitated. Despite his immediate frustration, deep smile lines surround his eyes."
M_AVG_HUMAN(30, SEX_MALE)
alignment 1000
bright 4
dilcopy barnham_request@gremlin();
dilcopy barnham_give@gremlin();
end

gremlin_small
names {"troublesome gremlin", "gremlin"}
title "a troublesome gremlin"
descr "A troublesome gremlin smirks at you."
extra {}
"This tiny gremlin looks to be particularly problematic. You immediately want nothing more than to kill it."
M_AVG_GOBLIN(6,SEX_MALE)
money 1 COPPER_PIECE

dilcopy wander_zones@function ("gremlin", 20, 0,0);
end

gremlin_medium
names {"vicious gremlin", "gremlin"}
title "a vicious gremlin"
descr "A vicious gremlin snarls at you."
extra {}
"This gremlin is vicious! You immediately want nothing more than to kill it."
M_GOBLIN_WARRIOR_SWORD(8,SEX_MALE)
money 2 COPPER_PIECE

dilcopy wander_zones@function ("gremlin", 25, 0,0);
end

gremlin_large
names {"large gremlin", "gremlin"}
title "a large gremlin"
descr "A large gremlin glares at you."
extra {}
"This is the biggest gremlin you've ever seen! You immediately want nothing more than to kill it."
M_GOBLIN_WARRIOR_CLUB(9,SEX_MALE)
money 1 SILVER_PIECE

dilcopy wander_zones@function ("gremlin", 30, 0,0);
end

grumpkin_small
names {"troublesome grumpkin", "grumpkin"}
title "a troublesome grumpkin"
descr "A troublesome grumpkin smirks at you."
extra {}
"This tiny grumpkin looks to be particularly problematic. You immediately want nothing more than to kill it."
M_AVG_GOBLIN(10,SEX_MALE)
money 2 COPPER_PIECE

dilcopy wander_zones@function ("gremlin", 20, 0,0);
end

grumpkin_medium
names {"vicious grumpkin", "grumpkin"}
title "a vicious grumpkin"
descr "A vicious grumpkin snarls at you."
extra {}
"This grumpkin is vicious! You immediately want nothing more than to kill it."
M_GOBLIN_WARRIOR_SWORD(12,SEX_MALE)
money 4 COPPER_PIECE

dilcopy wander_zones@function ("gremlin", 25, 0,0);
end

grumpkin_large
names {"large grumpkin", "grumpkin"}
title "a large grumpkin"
descr "A large grumpkin glares at you."
extra {}
"This is the biggest grumpkin you've ever seen! You immediately want nothing more than to kill it."
M_GOBLIN_WARRIOR_CLUB(13,SEX_MALE)
money 2 SILVER_PIECE

dilcopy wander_zones@function ("gremlin", 30, 0,0);
end

gaflaw
names {"gaflaw", "grumpkin"}
title "Gaflaw the Great"
descr "Gaflaw, the greatest of grumpkins stands proudly here."
extra {}
"Gaflaw is a terrifying grumpkin indeed! His presence clearly commands respect
among the grumpkins and gremlins that have been set loose on this place."
M_GOBLIN_WARRIOR_CLUB(15,SEX_MALE)
money 4 SILVER_PIECE

dilcopy aggressive@function(0, -1, 0, 10, 3, PULSE_SEC*4, 0, "ANY",
	{"$1n grumbles and attacks $3n!","$1n grumbles and attacks you!"});
end

gguard
names {"guard", "grumpkin"}
title "grumpkin guard"
descr "A large grumpkin guard is here."
extra {}
"This is the biggest grumpkin you've ever seen! You immediately want nothing more than to kill it."
M_GOBLIN_WARRIOR_SWORD(13,SEX_MALE)
money 2 SILVER_PIECE

dilcopy aggressive@function(0, -1, 0, 10, 3, PULSE_SEC*8, 0, "ANY",
	{"$1n clumsily attacks $3n!","$1n clumsily attacks you!"});
	
dilcopy teamwork@function("guard/gaflaw");
end

sventer
names {"rogue", "sventer"}
title "Sventer the rogue"
descr "A tall roguish man is here."
extra {}
"Tall, and dashingly handsom, Sventer has a scar down one cheek from an 
apparent run-in with a blade of one form or another. He is cowled in a dark 
cloak, and has a gleam in his eye."
M_HUMAN_THIEF_AXE(30,SEX_MALE)
money 1 GOLD_PIECE

dilcopy wander_zones@function ("torsbay", 180, 0,0);
dilcopy rogue_request@gremlin();
dilcopy rogue_give@gremlin();
end

%objects

remains
names {"remains"}
title "a pile of remains"
descr "The remains of someone, or something, have been dumped here."
weight 1
cost 1 IRON_PIECE
extra {}
"These remains are more decayed than otherwise. All that you can discern is 
that they appear to have been human, originally. This may be all that is left 
of Bernhard."
end

grump_sign
names {"rickety sign","sign"}
title "a rickety sign"
descr "A rickety <a cmd='read #'>sign</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
"NO TREASURES HERE!<br><br>There are definitely no treasures here. Dont 
even bother searching. Even if you looked at the wall, you wouldnt 
find any signs of treasure.<br><br>-Gaflaw the Great<br><div class='hint'>HINT: Try 'look wall' here.</div>"
end

carrot_sign
names {"wooden sign","sign"}
title "a wooden sign"
descr "A wooden <a cmd='read #'>sign</a> is here."
weight 1
cost 1 IRON_PIECE
extra {}
"Odin's Favorite Carrots!<br><div class='hint'>HINT: Try 'dig' here.</div>"
end

gaflaw_club
names {"large club","club"}
title "a large club"
descr "A large knobby club is here"
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_CLUB, BONUS_AVERAGE, BONUS_AVERAGE)  // Xyzzy: 0,0
weight 4
extra {}
"It's a simple yet effective club. Large and knobby, it wouldnt 
feel good to have this thwack you upside the head."
end

small_club
names {"small club","club"}
title "a simple club"
descr "A simple wooden club is here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_CLUB, BONUS_AVERAGE_MINUS, BONUS_AVERAGE_MINUS)  // Xyzzy: -1,-1
weight 1
extra {}
"It's a simple club. Despite it small size, it still wouldnt 
feel good to have this thwack you upside the head."
end

rusty_sword
names {"rusty sword","sword"}
title "a rusty sword"
descr "A rusty short sword is here"
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_SHORT_SWORD, BONUS_AVERAGE_MINUS, BONUS_AVERAGE_MINUS)  // Xyzzy: -1,-1
weight 1
extra {}
"This rusty sword appears to have been left in the rain for a period of 
several years. Despite this, you wouldn't want anyone to swing it at you."
end

coins
MONEY(GOLD_PIECE,2)
end

water_barrel
names {"barrel"}
title "a barrel"
descr "A barrel has been left here."
extra {}
"This is an excellent barrel for carrying water. If you were to find a source 
of water, you could pour it in!<br><br><div class='hint'>HINT: At the Obelisk in the Market Square of Midgaard, 'pour obelisk in barrel'.</div>"
manipulate {MANIPULATE_TAKE}
LIQ_DEF("clear",4,24,0,10,1,0,0)
cost 2 IRON_PIECE
end

midgaard_map
names {"midgaard map", "map"}
title "a map to Midgaard"
descr "A crumpled map has been left here."
extra {}
"This map tells how to travel from the Square in Udgaard, to the city of Midgaard.<br>
<div class='hint'>HINT: The command 'change exits' will toggle the display of available directions to travel. Then simply 'look' for a readout.</div><br><br>
Step 1: Start at the Village Square of Udgaard. <br>
Step 2: Travel as far as you can to the east (five rooms) and you will arrive at the Top of Hill.<br>
<div class='hint'>HINT: Try typing 'help area' here. You will find that you have arrived in an area known as Cypress Forest.</div><br>
Step 3: From Top of Hill, travel along the path through the Cypress Forest to it's edge. The directions will be as follows:<br>
south, east, south, east, east, north, east, north<br>
Step 4: Get your bearings! You should find that to the east lies a Dustry Trail west of Midgaard.<br>
<div class='hint'>HINT: Try typing 'directions' here -- you can shorten it to 'dir'. </div><br>
Step 5: Continue to the east, and you will find yourself on the Main Street of Midgaard itself!"
manipulate {MANIPULATE_TAKE}
cost 1 IRON_PIECE
end

barnham_axe
names {"hand axe", "axe"}
title "a simple hand axe"
descr
"A simple hand axe is here."
extra {}
"This is a simple hand axe.  It appears to be equally well suited for chopping wood and self defense."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_HAND_AXE, BONUS_GOOD, BONUS_AVERAGE)  // Xyzzy: 2,0
end

barnham_dagger // thief, sorcerer, necromancer, assassin, conjurer
names {"gleaming dagger", "dagger"}
title "a gleaming dagger"
descr
"A gleaming dagger lies here."
extra {}
"This dagger gleams with a magical glow. It appears to be well suited for self defense.<br>"
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_DAGGER, BONUS_EXCELLENT, BONUS_EXCELLENT)  // Xyzzy: 7,7
WEAPON_SLAYER(RACE_GOBLIN)
WEAPON_TRANSFER(WPN_DAGGER, BONUS_ARTIFACT)  // Xyzzy: +10
STR_TRANSFER(BONUS_AVERAGE_PLUS)  // Xyzzy: +1
DEX_TRANSFER(BONUS_AVERAGE_PLUS)  // Xyzzy: +1
dilcopy quests_restrict@function({EXPLORE_ONGOING,EXPLORE_COMPLETE},0,10,""); 
end

barnham_mace // priest, barbarian
names {"gleaming mace", "mace"}
title "a gleaming mace"
descr
"A gleaming mace lies here."
extra {}
"This mace gleams with a magical glow. It appears to be well suited for self defense.<br>"
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_MACE, BONUS_EXCELLENT, BONUS_EXCELLENT)  // Xyzzy: 7,7
WEAPON_SLAYER(RACE_GOBLIN)
WEAPON_TRANSFER(WPN_MACE, BONUS_ARTIFACT)  // Xyzzy: +10
STR_TRANSFER(BONUS_AVERAGE_PLUS)  // Xyzzy: +1
DEX_TRANSFER(BONUS_AVERAGE_PLUS)  // Xyzzy: +1
dilcopy quests_restrict@function({EXPLORE_ONGOING,EXPLORE_COMPLETE},0,10,""); 
end

barnham_ls // paladin, fighter, ranger, knight
names {"gleaming long sword", "sword"}
title "a gleaming long sword"
descr
"A gleaming long sword lies here."
extra {}
"This long sword gleams with a magical glow. It appears to be well suited for self defense.<br>"
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_LONG_SWORD, BONUS_EXCELLENT, BONUS_EXCELLENT)  // Xyzzy: 7,7
WEAPON_SLAYER(RACE_GOBLIN)
WEAPON_TRANSFER(WPN_LONG_SWORD, BONUS_ARTIFACT)  // Xyzzy: +10
STR_TRANSFER(BONUS_AVERAGE_PLUS)  // Xyzzy: +1
DEX_TRANSFER(BONUS_AVERAGE_PLUS)  // Xyzzy: +1
dilcopy quests_restrict@function({EXPLORE_ONGOING,EXPLORE_COMPLETE},0,10,""); 
end

tarn_dagger
names {"gleaming dagger", "dagger"}
title "a once gleaming dagger"
descr
"A once gleaming dagger lies here."
extra {}
"This dagger seems as if it once gleamed with a magical glow. Now, it is somewhat tarnished. It appears to be better suited for self defense than carving wood.<br>"
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_DAGGER, BONUS_GOOD_PLUS, BONUS_GOOD_PLUS)  // Xyzzy: 5,5
WEAPON_TRANSFER(WPN_DAGGER, BONUS_EXCELLENT_PLUS)  // Xyzzy: +5
STR_TRANSFER(BONUS_AVERAGE_PLUS)  // Xyzzy: +1
DEX_TRANSFER(BONUS_AVERAGE_PLUS)  // Xyzzy: +1
dilcopy quests_restrict@function({EXPLORE_ONGOING,EXPLORE_COMPLETE},0,10,""); 
end

barnham_jerkin
names {"leather jerkin", "jerkin"}
title "a leather jerkin"
descr "A simple leather jerkin has been left here."
extra {}
"A simple leather jerkin, it appears to provide some warmth as well as protection from the world."
ARMOUR_LEATHER(BONUS_AVERAGE, BONUS_AVERAGE)  // Xyzzy: 0,0
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
weight 4
cost 1 COPPER_PIECE
end

barnham_legs
names {"leather leggings","leggings"}
title "a pair of leather leggings"
descr "A pair of leather leggings have been left here."
extra {}
"Some simple leather leggings, they appear to provide some warmth as well as protection from the world."
ARMOUR_LEATHER(BONUS_AVERAGE, BONUS_AVERAGE)  // Xyzzy: 0,0
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
weight 2
cost 1 COPPER_PIECE
end

barnham_boots
names {"leather boots","boots"}
title "a pair of leather boots"
descr "A pair of leather boots have been left here."
extra {}
"Some simple leather boots, they appear to provide some warmth as well as protection from the world."
ARMOUR_LEATHER(BONUS_AVERAGE, BONUS_AVERAGE)  // Xyzzy: 0,0
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
weight 1
cost 1 COPPER_PIECE
end

adv_plate
names {"adventurer's jerkin", "jerkin"}
title "an Adventurer's Jerkin"
descr "A gleaming chain jerkin is here."
extra {}
"A fine chainmail jerkin, it looks like it would give any adventurer a distinct advantage in battle!"
ARMOUR_CHAIN(BONUS_AVERAGE_PLUS, BONUS_AVERAGE_PLUS)  // Xyzzy: 1,1
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
weight 5
cost 1 COPPER_PIECE
DEX_TRANSFER(BONUS_GOOD)  // Xyzzy: 2
dilcopy mvlev_restrict@function(40,0,20,"");
dilcopy resize();
end

adv_legs
names {"adventurer's leggings","leggings"}
title "an Adventurer's Leggings"
descr "A pair of gleaming chain leggings are here."
extra {}
"These fine chain leggings provide good protection, and seem to have a magical gleam to them."
ARMOUR_CHAIN(BONUS_AVERAGE_PLUS, BONUS_AVERAGE_PLUS)  // Xyzzy: 1,1
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
weight 4
cost 1 COPPER_PIECE
STR_TRANSFER(BONUS_GOOD)  // Xyzzy: 2
dilcopy mvlev_restrict@function(40,0,20,"");
dilcopy resize();
end

adv_boots
names {"adventurer's boots","boots"}
title "an Adventurer's Boots"
descr "A pair of magical boots lie here."
extra {}
"These fine boots have a magical twinkle to them. They are high quality adventuring boots, to be sure."
ARMOUR_LEATHER(BONUS_AVERAGE_PLUS, BONUS_AVERAGE_PLUS)  // Xyzzy: 1,1
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
weight 2
cost 1 COPPER_PIECE
SPEED_TRANSFER(4)
dilcopy mvlev_restrict@function(40,0,20,"");
dilcopy resize();
end

adv_glove
names {"adventurer's gloves","gloves"}
title "an Adventurer's Gloves"
descr "A fine pair of gloves lay here."
extra {}
"These fine gloves appear to have been well used by adventurers of years past."
ARMOUR_LEATHER(BONUS_AVERAGE_PLUS, BONUS_AVERAGE_PLUS)  // Xyzzy: 1,1
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HANDS}
weight 2
cost 1 COPPER_PIECE
WEAPON_TRANSFER(WPN_DAGGER, BONUS_EXCELLENT_PLUS)  // Xyzzy: +5
WEAPON_TRANSFER(WPN_MACE, BONUS_EXCELLENT_PLUS)  // Xyzzy: +5
WEAPON_TRANSFER(WPN_LONG_SWORD, BONUS_EXCELLENT_PLUS)  // Xyzzy: +5
dilcopy mvlev_restrict@function(40,0,20,"");
dilcopy resize();
end

adv_helm
names {"hero's helm", "helm"}
title "a Hero's Helm"
descr "A hero's helm lies here."
extra {}
"This gleaming helmet appears to provide great protection in battle. A hero of ages past must have worn this."
ARMOUR_CHAIN(BONUS_AVERAGE_PLUS, BONUS_AVERAGE_PLUS)  // Xyzzy: 1,1
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
weight 5
cost 1 COPPER_PIECE
HIT_TRANSFER(BONUS_GOOD_PLUS)  // Xyzzy: 3
dilcopy mvlev_restrict@function(40,0,20,"");
end

chest
names {"small chest","chest"}
title "a small sturdy chest"
descr "A small but sturdy chest is here."
extra {}
"This is a fairly small chest, just large enough to hold a few personal items."
type ITEM_CONTAINER
weight 30
open {EX_OPEN_CLOSE,EX_CLOSED}
cost 1 COPPER_PIECE
end

adv_chest
names {"sturdy chest","chest"}
title "a sturdy chest"
descr "A well-made and sturdy chest is here."
extra {}
"This is a well-made chest, sturdy and heavy."
type ITEM_CONTAINER
weight 50
open {EX_OPEN_CLOSE,EX_CLOSED}
cost 5 COPPER_PIECE
end

well
names {"simple wooden well", "wooden well", "simple well", "well", "water"}
title "the well"
descr "A simple wooden well is here."
LIQ_DEF("clear", 100,-1,5000,10,1,0,0)
cost 100 PLATINUM_PIECE
extra {}
"A simple wooden well, it appears that Barnham uses this heavily in the
operations of his farm."

end

potato
names {"potato"}
title "a potato"
descr "A nice sized potato."
manipulate {MANIPULATE_TAKE}
FOOD_DEF(12, 0)
weight 2
cost 1 IRON_PIECE
end

carrot
names {"carrot"}
title "a carrot"
descr "A good looking carrot."
manipulate {MANIPULATE_TAKE}
flags {UNIT_FL_BURIED}
FOOD_DEF(12, 0)
weight 2
cost 1 IRON_PIECE
end

heal_jug
names {"healing jug","jug"}
title "a jug of healing"
descr "A small white clay jug stands here."
extra {}
"The white clay jug is marked with healer's sigil."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
flags {UNIT_FL_BURIED}
type ITEM_POTION
POTION_DEF(60,SPL_CURE_WOUNDS_1,SPL_CURE_WOUNDS_1,SPL_NONE)
weight 1
cost 2 COPPER_PIECE
end

pendant
names {"gwydions amulet","amulet"}
title "Gwydion's Amulet"
descr "A small wooden amulet is here."
extra {}
"This small amulet is intricately carved of an unknown wood. A rich color, 
it has been worn smoothe by countless generations of hands clasping at it. 
While it's not clear why, there seems to be a deep power within."
extra {"$identify"}
"Gwydion's Amulet is a powerful tool for both the divine and magically inclined.
It brings its wearer closer to the source of their power.<br/>"
extra {"$wear_s"}
"You carefully place $2n around your neck. Your power grows."
extra {"$wear_o"}
"$1n carefully places $2n around their neck. Their power grows."
extra {"$rem_s"}
"You feel your power fade as you remove $2n."
extra {"$rem_o"}
"The power in $1n fades as they remove $2n."
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_NECK}
MATERIAL_WOOD("This item is made of an unidentified ancient wood.")
CHA_TRANSFER(BONUS_GOOD)  // Xyzzy: +2
BRA_TRANSFER(BONUS_GOOD)  // Xyzzy: +2
STR_TRANSFER(BONUS_AVERAGE_MINUS)  // Xyzzy: -1
dilcopy abi_restrict@function (ABIL_BRA,25,0,0,"bra_rest@skaven");
dilcopy charger@sorcerer();
dilcopy mana_drain@sorcerer();
rent 100 IRON_PIECE
end

heart
names {"gaflaw's heart", "heart"}
title "a beating heart"
descr "A heart beats here on the ground."
extra {} "A steaming heart, fresh and full of life. It wiggles slightly, trying to beat even outside the body."
manipulate {MANIPULATE_TAKE}
FOOD_DEF(12, 0)
weight 2
cost 1 IRON_PIECE
end

%reset

load carrot_sign into fn_02 max 1
load carrot into fn_01 local 1
load carrot into fn_02 local 1
load carrot into fn_03 local 1
load carrot into fn_04 local 1
load carrot into fn_05 local 1
load carrot into fn_06 local 1

load boldin into square@udgaard max 1

load barnham into farm_house max 1
{
   equip barnham_axe position WEAR_WIELD
   equip barnham_jerkin position WEAR_BODY
   equip barnham_legs position WEAR_LEGS
   equip barnham_boots position WEAR_FEET
}

load grumpkin_small into farm_06 local 3 max 10
load gremlin_small into farm_06 local 3 max 10
load grumpkin_small into fn_01 local 3 max 10
load gremlin_small into fn_01 local 3 max 10
load grumpkin_small into farm_05 local 3 max 10
load gremlin_small into farm_05 local 3 max 10
load grumpkin_small into fpath_01 local 3 max 10
load gremlin_small into fpath_01 local 3 max 10
load grumpkin_small into fs_05 local 3 max 10
load gremlin_small into fs_05 local 3 max 10

load grumpkin_medium into farm_04 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into farm_04 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load grumpkin_medium into fs_02 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into fs_02 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load grumpkin_medium into fn_03 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into fn_03 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load grumpkin_medium into farm_02 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into farm_02 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load grumpkin_medium into fpath_02 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into fpath_02 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}

load grumpkin_large into farm_04 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into farm_04 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load grumpkin_large into fn_06 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into fn_06 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load grumpkin_large into farm_01 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into farm_01 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load grumpkin_large into fpath_03 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into fpath_03 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load grumpkin_large into fs_03 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into fs_03 local 3 max 10
{
   equip small_club position WEAR_WIELD
}

load grumpkin_small into fcave_02 local 3 max 10
load gremlin_small into fcave_02 local 3 max 10
load grumpkin_small into fcave_03 local 3 max 10
load gremlin_small into fcave_03 local 3 max 10
load grumpkin_small into fcave_06 local 3 max 10
load gremlin_small into fcave_06 local 3 max 10
load grumpkin_small into fcave_09 local 3 max 10
load gremlin_small into fcave_09 local 3 max 10
load grumpkin_small into fcave_11 local 3 max 10
load gremlin_small into fcave_11 local 3 max 10

load grumpkin_medium into fcave_02 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into fcave_02 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load grumpkin_medium into fcave_03 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into fcave_03 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load grumpkin_medium into fcave_06 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into fcave_06 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load grumpkin_medium into fcave_08 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into fcave_08 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load grumpkin_medium into fcave_10 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}
load gremlin_medium into fcave_10 local 3 max 10
{
   equip rusty_sword position WEAR_WIELD
}

load grumpkin_large into fcave_02 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into fcave_02 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load grumpkin_large into fcave_06 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into fcave_06 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load grumpkin_large into fcave_05 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into fcave_05 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load grumpkin_large into fcave_12 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into fcave_12 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load grumpkin_large into fcave_03 local 3 max 10
{
   equip small_club position WEAR_WIELD
}
load gremlin_large into fcave_03 local 3 max 10
{
   equip small_club position WEAR_WIELD
}

load gaflaw into fcave_12 max 1
{
   equip gaflaw_club position WEAR_WIELD
   equip adv_helm position WEAR_HEAD
   load heart
}
load gguard into fcave_12 max 2
{
   equip rusty_sword position WEAR_WIELD
}
load gguard into fcave_12 max 2
{
   equip rusty_sword position WEAR_WIELD
}

remove chest in fcave_13
load chest into fcave_13 local 1
{
	load tarn_dagger local 1
}
load grump_sign into fcave_12 max 1
load remains into fcave_06 max 1

load well into farm_06 max 1

remove adv_chest in farm_attic
load adv_chest into farm_attic local 1
{
	load adv_plate local 1
	load adv_legs local 1
	load adv_boots local 1
	load adv_glove local 1
}
load heal_jug into cave_01 local 3

load sventer into dock1@torsbay max 1

load anchorman into fcave_11@gremlin max 1

// doors

door farm_house UP {EX_OPEN_CLOSE, EX_CLOSED}
door farm_house WEST {EX_OPEN_CLOSE, EX_CLOSED}
door farm_house EAST {EX_OPEN_CLOSE}
door farm_attic DOWN {EX_OPEN_CLOSE, EX_CLOSED}
door farm_01 EAST {EX_OPEN_CLOSE, EX_CLOSED}
door fcave_12 EAST {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN}
door fcave_13 EAST {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN}
door fcave_13 WEST {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN}
door cave_01 WEST {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN}

%end
