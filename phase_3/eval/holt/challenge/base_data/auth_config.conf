
$HTTP["url"] =~ "^/alpha/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/alpha/.htpasswd"
  auth.require = ("/alpha" => (
    "method" => "basic",
    "realm" => "alpha",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/bravo/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/bravo/.htpasswd"
  auth.require = ("/bravo" => (
    "method" => "basic",
    "realm" => "bravo",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/charlie/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/charlie/.htpasswd"
  auth.require = ("/charlie" => (
    "method" => "basic",
    "realm" => "charlie",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/delta/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/delta/.htdigest"
  auth.require = ("/delta" => (
    "method" => "digest",
    "realm" => "delta",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/echo/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/echo/.htdigest"
  auth.require = ("/echo" => (
    "method" => "digest",
    "realm" => "echo",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/foxtrot/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/foxtrot/.htpasswd"
  auth.require = ("/foxtrot" => (
    "method" => "basic",
    "realm" => "foxtrot",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/golf/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/golf/.htpasswd"
  auth.require = ("/golf" => (
    "method" => "basic",
    "realm" => "golf",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/hotel/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/hotel/.htpasswd"
  auth.require = ("/hotel" => (
    "method" => "basic",
    "realm" => "hotel",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/india/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/india/.htdigest"
  auth.require = ("/india" => (
    "method" => "digest",
    "realm" => "india",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/juliet/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/juliet/.htdigest"
  auth.require = ("/juliet" => (
    "method" => "digest",
    "realm" => "juliet",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/kilo/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/kilo/.htpasswd"
  auth.require = ("/kilo" => (
    "method" => "basic",
    "realm" => "kilo",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/lima/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/lima/.htpasswd"
  auth.require = ("/lima" => (
    "method" => "basic",
    "realm" => "lima",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/mike/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/mike/.htpasswd"
  auth.require = ("/mike" => (
    "method" => "basic",
    "realm" => "mike",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/november/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/november/.htdigest"
  auth.require = ("/november" => (
    "method" => "digest",
    "realm" => "november",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/oscar/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/oscar/.htdigest"
  auth.require = ("/oscar" => (
    "method" => "digest",
    "realm" => "oscar",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/papa/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/papa/.htpasswd"
  auth.require = ("/papa" => (
    "method" => "basic",
    "realm" => "papa",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/quebec/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/quebec/.htpasswd"
  auth.require = ("/quebec" => (
    "method" => "basic",
    "realm" => "quebec",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/romeo/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/romeo/.htpasswd"
  auth.require = ("/romeo" => (
    "method" => "basic",
    "realm" => "romeo",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/sierra/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/sierra/.htpasswd"
  auth.require = ("/sierra" => (
    "method" => "basic",
    "realm" => "sierra",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/tango/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/tango/.htpasswd"
  auth.require = ("/tango" => (
    "method" => "basic",
    "realm" => "tango",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/uniform/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/uniform/.htdigest"
  auth.require = ("/uniform" => (
    "method" => "digest",
    "realm" => "uniform",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/victor/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/victor/.htdigest"
  auth.require = ("/victor" => (
    "method" => "digest",
    "realm" => "victor",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/whiskey/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/whiskey/.htdigest"
  auth.require = ("/whiskey" => (
    "method" => "digest",
    "realm" => "whiskey",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/xray/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/xray/.htpasswd"
  auth.require = ("/xray" => (
    "method" => "basic",
    "realm" => "xray",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/yankee/" {
  auth.backend = "htpasswd"
  auth.backend.htpasswd.userfile = "/data/webroot/yankee/.htpasswd"
  auth.require = ("/yankee" => (
    "method" => "basic",
    "realm" => "yankee",
    "require" => "valid-user"
  )) 
}
    
$HTTP["url"] =~ "^/zulu/" {
  auth.backend = "htdigest"
  auth.backend.htdigest.userfile = "/data/webroot/zulu/.htdigest"
  auth.require = ("/zulu" => (
    "method" => "digest",
    "realm" => "zulu",
    "require" => "valid-user"
  )) 
}
    
