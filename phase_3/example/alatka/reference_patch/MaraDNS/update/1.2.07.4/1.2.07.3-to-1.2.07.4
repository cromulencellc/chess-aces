#!/bin/bash -e

# This script updates MaraDNS 1.2

# To run this script, make sure that this script is in the directory
# containing the tarball for the version of MaraDNS you wish to update, and
# all of the patches are in a directory entitled 'patches'.

# For example, to update MaraDNS 1.2.02 to 1.2.03, make sure 
# maradns-1.2.02.tar.lzma is in the same directory as this script, and
# that the directory containing this script has a directory called
# "patches/" which has all of the maradns-1.2.02*.patch files.

# You will need to have lzma on your system to run this script

# Get the current and next version number

CURRENT=${0%%-*}
CURRENT=${CURRENT##*/}
NEXT=${0##*-}

# Make a clean CURRENT install, which we rename NEXT
rm -fr maradns-$CURRENT 2> /dev/null
rm -fr maradns-$NEXT 2> /dev/null
echo extracting tarball
cat maradns-$CURRENT.tar.lzma | lzma d -si -so | tar xf -
if [ $? != 0 ] ; then
	echo run this from the correct directory
	exit 1
fi
rm -fr maradns-$NEXT*
mv maradns-$CURRENT maradns-$NEXT
cd maradns-$NEXT

# The patches

mkdir update/$NEXT
cp ../patches/maradns-$CURRENT* update/$NEXT

# This is one of the few places where we will need to change anything
# in this script from version to version

# The revision number; in the case of having multiple snapshots a day,
# the revision number can be incremented so as to minimize confusion
# This is only done when more than one snapshop is uploaded to the
# maradns.org server in a given day.
REVISION=.1

echo applying patches

# Patch #1: Fix webpage rendering in Opera 5 (for the 2 people in the
# world who still use this ancient browser)
patch -p1 < update/$NEXT/maradns-1.2.07.3-opera5.patch

# Patch #2: Fix most webpage validation errors with validator.w3.org;
# add two questions to FAQs; other web site updates
patch -p1 < update/$NEXT/maradns-1.2.07.3-validate.patch

# Patch #3: Fix remaining validation problems with HTML; revise FAQ
# to explain why the CSS does not validate
patch -p1 < update/$NEXT/maradns-1.2.07.3-validate_2.patch

# Patch #4: Fix one dead link
patch -p1 < update/$NEXT/maradns-1.2.07.3-faq.deadlink.patch

# Patch #5: Fix another dead link
patch -p1 < update/$NEXT/maradns-1.2.07.3-download.deadlink.patch

# Patch #6: Link to slackware version on download page
patch -p1 < update/$NEXT/maradns-1.2.07.3-slackware.patch

# Patch #7: Clarify that you don't have to worry about csv2_default_zonefile
#           FQDN4 limitation unless you know what a csv2_default_zonefile is
patch -p1 < update/$NEXT/maradns-1.2.07.3-csv2_default.clarify.patch

# Patch #8: Fix NS delegation.  The problem was this: 

# NS delegation records are never considered authoritative

# You can only see the NS and AR information for an authoritative record

# A NS record *only* has NS (and maybe AR) information

# The workaround: We now see if it is a NS delegation (Triggered when the
# question is a non-NS and the answer is a NS); if so, we show the NS
# and AR info regardless of its authoritative status
patch -p1 < update/$NEXT/maradns-1.2.07.3-ns_delegation.fix.patch

# Patch #9: Fix some minor bugs with the mararc parser (a bug where an error
#           in a line was not correctly reported, and a bug where a value had
#           to have at last one alphanumeric variable in it)
patch -p1 < update/$NEXT/maradns-1.2.07.3-mararc_parser.patch

# Patch: Update RPM spec file (this is always done)
patch -p1 < update/$NEXT/maradns-$CURRENT-rpm_spec.patch
mv build/maradns-$CURRENT.spec build/maradns-$NEXT.spec

# Make sure webpage changelog file and doc source changelog file are one
# and the same
cd doc/en/webpage
rm changelog.embed
ln -s ../source/changelog.embed .
cp faq.embed ../source
rm faq.embed
ln -s ../source/faq.embed .
cd ../../..

# Patch: Update changelog (this is always done)
patch -p1 < update/$NEXT/maradns-$CURRENT-changelog.patch

# Other release-specific fixes and changes go here

cd doc/en/webpage
rm roadmap.rm.html
cd ../../..
# Remove older update scripts
cd update
rm -fr 1.2.01
rm -fr 1.2.02
rm -fr 1.2.03.1
rm -fr 1.2.03.2
cd ..

# Anything below this line normally is not changed between MaraDNS versions
echo updating documentation

# Update the documentation
cd doc/en
make
cd man
make
# The following is time-consuming, so we only do it when making the final
# tarballs
if [[ "$1" == "go" || "$1" == "snap" ]] ; then
	echo making PDF reference
	./make.pdf
	echo done
fi
cd ../tutorial
make
cd ../text
make
cd ../webpage
make
# Go back to the maradns dir
cd ../../..

rm CHANGELOG
ln -s doc/en/changelog.txt CHANGELOG

# Go one level higher than the toplevel directory to copy this script
# over
cd ..

# Put this script in the "build" directory
cp $0 maradns-$NEXT/update/$NEXT

if [[ "$1" != "go" && "$1" != "snap" ]] ; then
	echo OK, maradns-$NEXT built.  Confirm this compiles and	
	echo perform basic regression before re-running this to make
	echo the tarballs.  Once you have tested this, rerun this 
	echo script as: $0 go
	exit 0
fi

# Build the tarballs
echo making new tarballs

if [ "$1" == "snap" ] ; then
	SNAP=Q.$( date +%Y%m%d )$REVISION
	rm -fr maradns-$SNAP
	mv maradns-$NEXT maradns-$SNAP
else
	SNAP=$NEXT
	tar cjf maradns-$SNAP.tar.bz2 maradns-$SNAP
	tar czf maradns-$SNAP.tar.gz maradns-$SNAP

	# All of the compression we actually use was originally written by 
	# Igor Pavlov for the 7-zip compression suite
	echo shrinking .gz tarball
	advdef -z -3 maradns-$SNAP.tar.gz
fi

echo using exotic compression
tar cf maradns-$SNAP.tar maradns-$SNAP

echo lzma compression \(this will take about 5 minutes\)
date
# To decompress: cat file.tar.lzma | lzma d -si -so | tar xvf -
# -d20 makes the file almost as small as -d22, but uses 1/4 of the memory
# (only a little over one meg needed for decompression)
lzma e maradns-$SNAP.tar maradns-$SNAP.tar.lzma -a2 -d20 -fb255
date
echo

# Clean up the uncompressed tarball
rm maradns-$SNAP.tar

exit 0

# The other exotic compressors can't be run in a pipeline

echo 7zip compression
date
7za a maradns-$SNAP.tar.7z maradns-$SNAP.tar
date
echo

echo paq6 compression \(This will take 2\-3 minutes\)
date
paq6v2 -2 maradns-$SNAP.tar.pq6 maradns-$SNAP.tar
date
echo

echo rzip compression
date
rzip maradns-$SNAP.tar
date
echo
