--- maradns-1.2.07.1/parse/ParseMaraRc.c.orig	2006-03-21 22:49:29.000000000 -0800
+++ maradns-1.2.07.1/parse/ParseMaraRc.c	2006-03-21 23:10:43.000000000 -0800
@@ -486,7 +486,9 @@
    output: JS_ERROR on error, 1 on most sucessful adds, 2 if the add
            caused the hash table to grow, -2 if the hash was not found
            (unused in mararc file), -3 if there is already a hash element
-           there
+           there, -4 for "Can't do += to something not there", 
+           -5 for "Sorry, += only supported for strings", 
+           -6 if dictionary has not been initialized
    global vars used: dvar[], keywords[]
 */
 int write_dvar(js_string *name, js_string *key, js_string *value,
@@ -505,7 +507,9 @@
         return JS_ERROR;
     if(num == JS_ERROR)
         return JS_ERROR;
-    if(dvar[num] == 0 || num < 0 || num > DKEYCOUNT)
+    if(dvar[num] == 0) 
+        return -6; 
+    if(num < 0 || num > DKEYCOUNT)
         return JS_ERROR;
 
     /* Return not found if not found */
@@ -586,7 +590,8 @@
           A js_string object that will contain the variable's value
           (description of problem on syntax error)
    output: JS_ERROR on fatal error, 1 if it is a string (or syntax error),
-           2 if it is an assosciative array, 3 if it inits a dict
+           2 if it is an assosciative array (dictionary), 3 if it inits a 
+           dictionary
    note:  This needs to be rewritten to be less hackish
 */
 
@@ -1139,6 +1144,15 @@
 		    printf("Error in line %d\n",linenum);
 		    exit(1);
 		    }
+                else if(result == -6) {
+                    printf("Trying to access unitizalized dictionary var.\n");
+                    printf("Try adding this line to the beginning of the ");
+                    printf("mararc file:\n\n");
+                    js_show_stdout(var);
+                    printf(" = {}\n");
+		    printf("Error in line %d\n",linenum);
+		    exit(1);
+                    } 
                 }
             }
         else if(command == 1 && !error) { /* Add element to string object */
