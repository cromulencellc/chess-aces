--- deadwood-3.1.03/doc/CHANGELOG	2011-11-27 15:35:18.000000000 -0600
+++ deadwood-3.2.01/doc/CHANGELOG	2012-02-11 14:14:55.000000000 -0600
@@ -1,3 +1,46 @@
+3.2.01 (20120211):
+
+* Bugfix: Deadwood no longer causes the TTL of a record to be at least
+  30 seconds long when fetching it from the cache.
+
+* SQA test for "TTL updated to 30 seconds" bug (sqa_ttl_expire) added
+
+* Test for seeing how well Deadwood resolves the "Alexa top 500" added
+
+* Improvements determining when records expire from the cache
+
+* Default num_retries increased from 2 to 5 (improves number of DNS records
+  Deadwood correctly resolves on the first attempt; trades speed for 
+  accuracy)
+
+* DNS-over-TCP connections given more time to resolve
+
+* Numerous documentation updates: Updated FAQ, HTML version of documents
+  added, Example dwood3rc file showing all parameters added, etc.
+
+3.1.03 (20111221):
+
+* Bugfix: Deadwood uses the TTL from upstream for incomplete CNAME referrals
+  instead of having it hard-coded to be 60 seconds long.
+
+* Bugfix: The dwd_nextkey() associative array/dictionary iterator now uses
+  dwh_hash_compress() to find the hash bucket for our hash key, which makes
+  hash iterations run in O(n) instead of O(n^2) operations (n being the 
+  hash size).  In plain English, Deadwood will now not bog down parsing 
+  dwood3rc files with large dictionaries.
+
+* Resolution speed optimization: Deadwood now uses either the POSIX-compliant 
+  clock_gettime() call in Linux or Windows' GetSystemTimeAsFileTime() call 
+  in order to have fraction-of-a-second timestamps (which speed up resolution
+  when a remote server is not replying to our query). For systems without 
+  clock_gettime() (such as Mac OS X), Makefile.fallback has been added.
+
+3.1.02 (20111127):
+
+Hotfix: Deadwood 3.1.01 did not correctly initialize all pointers with NULL 
+(0 in the source code since NULL is always 0 in C) resulting in invalid
+pointer dereference crashes.
+
 3.1.01 (20111127):
 
 * Bugfix: We now favor glued over glueless records so as to not fall in
