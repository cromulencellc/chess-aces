--- deadwood-3.0.02/INSTALL.txt	2010-08-20 02:54:13.000000000 -0500
+++ deadwood-3.0.03/INSTALL.txt	2011-06-24 13:54:52.524103344 -0500
@@ -1,5 +1,5 @@
 Deadwood is a recursive DNS program that is supported for two platforms:
-Windows XP (via MinGW) and CentOS Linux version 5.  This program may or 
+Windows XP (via MinGW) and Scientific Linux version 6.  This program may or 
 may not work on other platforms, but will not be supported on any other 
 platform without some kind of support deal made (but see "Other platforms"
 below).
@@ -8,25 +8,26 @@
 is a supplied document (doc\Windows\Vista.txt) that describes one way
 to get Deadwood to run in Vista and Windows 7.
 
-The rest of this document deals with how to compile this code in CentOS 5,
-followed by a section on how to compile this code in Windows XP.
+The rest of this document deals with how to compile this code in Scientific
+Linux 6, followed by a section on how to compile this code in Windows XP.
 
-==CENTOS 5==
+==SCIENTIFIC LINUX 6==
 
-To compile this program in CentOS 5, first set the environmental variable 
-FLAGS to the flags you wish to give the compiler.  For example, with gcc,
-you probably want to make the compile-time flags "-O3" unless you
-are making this as small as possible for an embedded system.
+To compile this program in Scientific Linux 6, first set the environmental
+variable FLAGS to the flags you wish to give the compiler.  For example,
+with gcc, you probably want to make the compile-time flags "-O3" unless
+you are making this as small as possible for an embedded system.
 
 To set tha flags to be "-O3" using a POSIX-compliant shell (Bash, ash, etc.):
 
 	export FLAGS='-O3'
 
 Once the compile-time flags are set, the next step is to compile the
-program.  If in CentOS 5, enter the src directory and use 'make' to do this:
+program.  If in Scientific Linux 6, enter the src directory and use 'make' 
+to do this:
 
 	cd src/
-	make -f Makefile.centos5
+	make -f Makefile.sl6
 
 There is a single program compiled, Deadwood.  Place this program where
 it can be used.  For example, to place this program in the directory
@@ -45,14 +46,14 @@
 
 Of course, you may want to start up this program and run it as a 
 daemon when the system starts up.  First, look at the text file
-dwood2rc (in the doc/ directory) and edit it.  Then, make
+dwood3rc (in the doc/ directory) and edit it.  Then, make
 this file /etc/dwood3rc.  For example:
 
 	nano -w dwood3rc
 	cp dwood3rc /etc
 
 You will also want to make a directory for Deadwood.  This is the
-chroot_dir parameter in the dwood2rc file, and by default points to
+chroot_dir parameter in the dwood3rc file, and by default points to
 /etc/deadwood:
 
 	mkdir /etc/deadwood
@@ -72,7 +73,7 @@
 The directory /etc/maradns/logger is needed for duende to run.
 
 Now, you will want to edit your system start-up scripts to start
-up Deadwood.  To do this in CentOS 5, make a file with the name 
+up Deadwood.  To do this in Scientific Linux 6, make a file with the name 
 /etc/init.d/deadwood with the following content:
 
 #!/bin/sh
@@ -98,10 +99,10 @@
 	ln -s ../init.d/deadwood S61deadwood
 
 Note that system startup is variable between distributions and the above
-steps may not work if you're not using CentOS 5.  If you wish help with 
-using Deadwood with another version of Linux or *NIX, send me an email
-and we'll discuss rates.  Or send an email to the MaraDNS list and someone
-(possibly me) may or may not help you.
+steps may not work if you're not using Scientific Linux 6.  If you wish
+help with using Deadwood with another version of Linux or *NIX, send
+me an email and we'll discuss rates.  Or send an email to the MaraDNS
+list and someone (possibly me) may or may not help you.
 
 It is possible to compile Deadwood with IPv6 support, or with caching
 disabled (which makes the binary a little smaller, for really tiny
@@ -112,12 +113,12 @@
 The simplest way to run this program in Windows XP is to use the prebuilt
 binary (.exe file) which should be in the same place as the place where 
 you obtained this source code, with a name like 
-"Deadwood-2-X-XX-win32.zip" (or "Deadwood-2-X-XX-win32.7z").
+"Deadwood-3-0-XX-win32.zip" (or "Deadwood-3-0-XX-win32.7z").
 
 The simplest way to compile this program in Windows XP is to use the
 version of Deadwood bundled with the Tiny C Compiler and a batch file
 called "tcc-compile.bat" which compiles Deadwood; this has a filename
-like "deadwood-tcc-2.X.XX.7z", but needs the 7-zip program 
+like "deadwood-tcc-3.0.XX.7z", but needs the 7-zip program 
 (http://7.zip.org) or another program that can understand .7z files such
 as WinRAR in order to decompress.
 
@@ -183,10 +184,11 @@
 
 ==OTHER PLATFORMS==
 
-Just because Deadwood is only fully supported in CentOS 5 and Windows XP
-doesn't mean Deadwood doesn't run on other platforms.  It just means that,
-if you wish to run Deadwood on another platform, it's up to you to make
-the port.  Or, if you prefer, pay me to make the port for you.  
+Just because Deadwood is only fully supported in Scientific Linux 6
+and Windows XP doesn't mean Deadwood doesn't run on other platforms.
+It just means that, if you wish to run Deadwood on another platform,
+it's up to you to make the port.  Or, if you prefer, pay me to make
+the port for you. 
 
 I have made the code portable; there should not be any endian issues (this
 has not been tested since I don't have access to a big-endian computer) nor 
@@ -199,14 +201,15 @@
 stdint.h for your compiler; I know there is a pstdint.h out there that 
 works with most Microsoft and Borland compilers.
 
-The CentOS 5 Makefile should work on other Linux variants, as well as other 
-*NIX clones, but no guarantees.  For example, there is a Cygwin Makefile 
-included in the "src/" directory; I have verified that Deadwood 2.4 compiles 
-in Cygwin without problem.  This may make it possible to have a version of 
-Deadwood in Windows with IPv6 support; Cygwin 1.7 and later should have 
-IPv6 and it might be possible to compile in IPv6 this way.  Again, if this 
-is something you're interested in, feel free to send patches to the MaraDNS 
-mailing list, or offer to pay me.
+The Scientific Linux 6 Makefile should work on other Linux variants,
+as well as other *NIX clones, but no guarantees.  For example,
+there is a Cygwin Makefile included in the "src/" directory; I
+have verified that Deadwood 2.4 compiles in Cygwin without problem.
+This may make it possible to have a version of Deadwood in Windows
+with IPv6 support; Cygwin 1.7 and later should have IPv6 and it might
+be possible to compile in IPv6 this way.  Again, if this is something
+you're interested in, feel free to send patches to the MaraDNS mailing
+list, or offer to pay me.
 
 ==SUPPORT==
 
--- deadwood-3.0.02/bug.reporting.policy	2010-07-29 12:39:09.000000000 -0500
+++ deadwood-3.0.03/bug.reporting.policy	2011-06-24 13:55:47.366105168 -0500
@@ -4,14 +4,12 @@
 * Valgrind-reported memory leaks can always be reported.  Valgrind-reported
 	errors are only valid if Deadwood is compiled with -DVALGRIND_NOERRORS
 
-* The only officially supported OSes are Windows XP and CentOS 5.  OS-specific
-	issues such as startup, daemonizing, sysloggin, and /etc/resolv.conf
-	setup are only supported on these two OSes.
+* The only officially supported OSes are Windows XP and Scientific Linux 6.
+	OS-specific issues such as startup, daemonizing, sysloggin, and 
+	/etc/resolv.conf setup are only supported on these two OSes.
 
 * Bugs need to be reported to the MaraDNS list, not to my email account nor
-	as blog comments.  I hope to have time to set up a web forum for
-	MaraDNS/Deadwood support for people not comfortable with mailing
-	lists, but no promises.
+	as blog comments.  
 
 * Bugs reporting Deadwood crashes will be marked "unreproducible" unless
 	either a stack trace (or core dump if the program was compiled with
