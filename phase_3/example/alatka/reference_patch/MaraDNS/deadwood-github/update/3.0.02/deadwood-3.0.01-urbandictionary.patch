--- deadwood-3.0.01/src/DwRecurse.c	2010-09-24 18:45:12.000000000 -0700
+++ deadwood-3.0.02/src/DwRecurse.c	2011-01-16 14:29:37.000000000 -0800
@@ -1732,6 +1732,7 @@
         int32_t start = 0, end = 0;
         dw_str *temp = 0;
         int first_offset = 0, place = 0, rdlength = 0;
+	int last_place = 0;
 
         if(value == 0) {
                 return;
@@ -1753,6 +1754,9 @@
 
         first_offset = value->len;
         while(this_offset < 15) {
+
+		last_place = place;
+		
                 offsets[this_offset * 2] = place + first_offset;
                 place = dw_get_dn_end(temp, place);
                 if(place < 0) {
@@ -1767,12 +1771,34 @@
                         return;
                 }
                 place += rdlength + 2;
+
+		/* Make sure string will fit in "value" */
+		if(place + first_offset > value->max - 8 - (this_offset * 4)) {
+			if(last_place < temp->len) {
+				temp->len = last_place;
+				place = last_place;
+			}
+			break;
+		} 
+
                 this_offset++;
                 if(place >= temp->len) {
                         break;
                 }
         }
 
+	/* RRs we didn't account for above are discarded */
+	if(place < temp->len) {
+		temp->len = place;
+	}
+	/* Make sure string will fit in "value" */
+	if(place + first_offset > value->max - 8 - (this_offset * 4)) {
+		if(last_place < temp->len) {
+			temp->len = last_place;
+			this_offset--;
+		}
+	} 
+
         dw_append(temp,value);
         dw_destroy(temp);
 
@@ -2696,6 +2722,9 @@
                 num_alloc = 32000;
         }
         num_alloc++; /* Stop off-by-one attacks */
+	if(rem[conn_number].recurse_depth > 32) {
+		return;
+	}
 
         new_conn_num = find_free_remote();
         if(new_conn_num == -1) { /* No more remote pending connections */
