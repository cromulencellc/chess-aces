#!/bin/sh -e

# This script updates Deadwood 2.9

# To run this script, make sure that this script is in the directory
# containing the tarball for the version of Deadwood you wish to update, and
# all of the patches are in a directory entitled 'patches'.

CURRENT=${0%%-*}
CURRENT=${CURRENT##*/}
NEXT=${0##*-}

# The revision number; in the case of having multiple snapshots a day,
# the revision number can be incremented so as to minimize confusion
# This is only done when more than one snapshop is uploaded to the
# maradns.org server in a given day.
REVISION=1

# Make a clean CURRENT install, which we rename NEXT
rm -fr deadwood-$CURRENT 2> /dev/null
rm -fr deadwood-$NEXT 2> /dev/null
echo extracting tarball
tar xjf deadwood-$CURRENT.tar.bz2
if [ $? != 0 ] ; then
	echo run this from the correct directory
	exit 1
fi
rm -fr deadwood-$NEXT*
mv deadwood-$CURRENT deadwood-$NEXT
cd deadwood-$NEXT

# The patches

mkdir update/ # Deadwood 2.9.01 doesn't have this...
mkdir update/$NEXT
if [ "$1" != "new" ] ; then
	cp ../patches/deadwood-$CURRENT* update/$NEXT
	#cp ../patches/maradns* update/$NEXT
	#echo
fi

# This is one of the few places where we will need to change anything
# in this script from version to version

echo applying patches

# Regenerate Deadwood's random prime number
echo Making new random prime
cd src
cc -o foo RandomPrime.c
./foo > DwRandPrime.h
rm foo
cd ..

# Release-specific fixes and changes go here

# Patch #1: Update INSTALL.txt to not mention DwMain
patch -p1 < update/2.9.02/deadwood-2.9.01-DwMain.patch

# Patch #2: Increase MAXIPS to 128
patch -p1 < update/2.9.02/deadwood-2.9.01-MAXIPS.patch

# Patch #3: Remove spurious debug message 
patch -p1 < update/2.9.02/deadwood-2.9.01-spurious_message.patch

# Patch #4: Update Deadwood's documents
patch -p1 < update/2.9.02/deadwood-2.9.01-doc_update.patch

# Patch #5: Update bug reporting policy (on reproducible crashes, please)
patch -p1 < update/2.9.02/deadwood-2.9.01-bug_reporting.patch

# Patch #6: Fix bug described in mailing list posting at
# 	http://marc.info/?l=maradns-list&m=128014555425838&w=2
#	(we would get SERVER FAIL instead of SOA "not there" when looking
#	 up non-existent AAAA records)
patch -p1 < update/2.9.02/deadwood-2.9.01-show_not_there_2.patch

# Patch #7: Fix resolution of wac.0B2D.edgecastcdn.net.
#cp src/DwRecurse.c src/DwRecurse.c.orig
patch -p1 < update/2.9.02/deadwood-2.9.01-edgecastcdn.net.patch

# Patch #8: Have new remote_T member called child_id (for sanity checking)
patch -p1 < update/2.9.02/deadwood-2.9.01-child_id.patch

# Convert tabs in code to spaces, since this is inconsistant in different
# programs; disable when in "work" mode since it messes up patches
if [ "$1" != "work" ] ; then 
	echo removing tabs from source files
	for a in $( find . -type f -name \*.[ch] ) ; do 
		col -x < $a > foo
		mv foo $a
	done
fi

echo updating documentation
# Update the documentation
cd doc
make
# Go back to the deadwood dir
cd ..

# Go one level higher than the toplevel directory to copy this script
# over
cd ..

# Put this script in the "build" directory
cp $0 deadwood-$NEXT/update/$NEXT

if [ "$1" = "new" ] ; then
	tar xjf deadwood-$CURRENT.tar.bz2
	echo OK, both deadwood-$CURRENT and deadwood-$NEXT made\; you
	echo now can start making patches.
	exit 0
fi

if [ "$1" != "go" ] && [ "$1" != "snap" ] && [ "$1" != "work" ] ; then
	echo OK, deadwood-$NEXT built.  Confirm this compiles and	
	echo perform basic regression before re-running this to make
	echo the tarballs.  Once you have tested this, rerun this 
	echo script as: \"$0 go\" or as \"$0 snap\" 
        echo to make a daily snapshot
	exit 0
fi

if [ "$1" = "work" ] ; then
	tar xjf deadwood-$CURRENT.tar.bz2
	echo OK, both deadwood-$CURRENT and deadwood-$NEXT made\; you
	echo now can make more patches as needed.  
	exit 0
fi

# Build the tarballs
echo making new tarballs

if [ "$1" = "snap" ] ; then
	SNAP=H-$( date +%Y%m%d )-$REVISION
	rm -fr deadwood-$SNAP
	mv deadwood-$NEXT deadwood-$SNAP
	tar cjf deadwood-$SNAP.tar.bz2 deadwood-$SNAP
	exit 0
else
	SNAP=$NEXT
	tar cjf deadwood-$SNAP.tar.bz2 deadwood-$SNAP
fi

exit 0 # Done
