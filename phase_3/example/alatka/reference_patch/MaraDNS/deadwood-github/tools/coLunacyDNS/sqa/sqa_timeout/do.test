#!/bin/bash
# Bashism: Job control

# Test how we handle not getting a reply upstream
. ../testVars
PROG="../../coLunacyDNS"

cat > test18.lua << EOF
bindIp = "127.7.7.18" 
logLevel = 1 -- flush stdout
function processQuery(Q) -- Called for every DNS query received
  coDNS.log("Got query " .. Q.coQuery)
  local t = coDNS.solve({name=Q.coQuery, type="A", upstreamIp4="127.7.7.19"})
  if t.status then
    coDNS.log("t.status is " .. t.status)
  end 
  if t.answer then -- answer will be "DNS connect error" on timeout
    coDNS.log("t.answer is " .. t.answer) 
  end
  return {co1Type = "A", co1Data = "10.1.1.1"}
end
EOF
cat > test19.lua << EOF
bindIp = "127.7.7.19"
logLevel = 1 -- flush stdout
function processQuery(Q) -- Called for every DNS query received
  local s = string.lower(Q.coQuery)
  coDNS.log("Ignoring query " .. s)
  return {co1Type = "ignoreMe"}
end
EOF

${PROG} -d test18.lua | egrep '[A-Za-z]' | grep -vi version > output.test18 &
${PROG} -d test19.lua | egrep '[A-Za-z]' | grep -vi version > output.test19 &
sleep 1

askmara Amaradns.samiam.org. 127.7.7.18 > output.test1

LIST=$( ps auxw | awk "$PROCGET" | grep "$PROG" | awk '{print $1}' )
for process in $LIST ; do
	kill -ALRM $process
done
sleep 1

if ! cmp output.success18 output.test18 > /dev/null 2>&1 ; then
        echo Timeout Test failed: Server did not log messages correctly
        exit 255
fi
if ! cmp output.success19 output.test19 > /dev/null 2>&1 ; then
        echo Timeout Test failed: Upstream did not log messages correctly
        exit 255
fi
if ! cmp output.success1 output.test1 > /dev/null 2>&1 ; then
        echo Timeout Test failed: Client did not log answer
        exit 255
fi

echo Timeout test Success
rm test*.lua
rm output.test*
