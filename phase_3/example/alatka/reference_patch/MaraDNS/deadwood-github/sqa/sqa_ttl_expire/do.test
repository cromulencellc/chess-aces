#!/bin/bash -e

# Bash-isms used: Job control (quick-and-dirty daemonization)

# Make sure that we correctly expire records even if they are frequently
# accessed.  

# This test *may* not correctly run around midnight (local time)

# Make sure we are root
if ! id | grep root > /dev/null ; then
	echo You must run this test as root
	exit 1
fi

# If not already build, compile Deadwood
if [ ! -x ../../src/Deadwood ] ; then
	HERE=$( pwd )
	cd ../../src/
	export FLAGS='-g -DXTRA_STUFF'
	make -f Makefile.sl6
	cd $HERE
fi

# Configure Deadwood
cat > dwood3rc << EOF
bind_address = "127.0.0.1"
recursive_acl = "127.0.0.1/16"
chroot_dir = "$( /bin/pwd )"
upstream_servers = {}
upstream_servers["."] = "127.0.0.2"
filter_rfc1918 = 0
EOF

# Compile custom DNS server with timestamp-based IP (10.Hour.Minute.Second)

gcc -g -o microdns-timestamp microdns-timestamp.c

# Run custom DNS server and deadwood
../../src/Deadwood -f dwood3rc > /dev/null 2>&1 &
./microdns-timestamp 10.1.2.3 127.0.0.2 > /dev/null 2>&1 &

sleep 5

# Make sure records expire after 60 seconds and are reloaded upstream
FIRST=$( askmara Amaradns.org. | grep -v '#' | awk '{print $4}' )
for a in 1 2 3 4 5 6 7 ; do
	sleep 10
	askmara Amaradns.org. > /dev/null
done
SECOND=$( askmara Amaradns.org. | grep -v '#' | awk '{print $4}' )

if [ "$FIRST" != "$SECOND" ] ; then
	echo PASS
	./clean.up
	exit 0
fi

echo FAIL
