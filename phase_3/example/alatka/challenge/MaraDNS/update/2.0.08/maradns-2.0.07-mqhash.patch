--- maradns-2.0.07/tools/misc/mqhash.c.orig	2013-05-02 11:46:47.000000000 -0700
+++ maradns-2.0.07/tools/misc/mqhash.c	2013-05-02 11:46:55.000000000 -0700
@@ -306,6 +306,7 @@
     FILE *sh;
     char copy[HASH_BYTES * 43];
     int n = 0;
+    int q = 0;
 
     unsigned int len = 0;
 
@@ -373,6 +374,42 @@
             copy[counter] = ':';
             counter++;
             }
+    else if((argc == 3 && *(argv[1]) == '-' && *(argv[1] + 1) == 'q') ||
+       (argc == 5 && *(argv[3]) == '-' && *(argv[3] + 1) == 'q')) {
+            char fp[100];
+            int zork;
+
+            if(strncpy(fp,getenv("HOME"),50) == NULL) {
+                    perror("Problem copying string");
+                    exit(35);
+            }
+            if(strcat(fp,"/.mhash_prefix2") == NULL) {
+                    perror("Problem making string");
+                    exit(36);
+            }
+            if((sh = fopen(fp,"rb")) == NULL) {
+                perror("Could not open file ~/.mhash_prefix2");
+                exit(5);
+                }
+            /* Get only one line from this file: A string we put at
+             * the beginning of the hash we will make */
+            for(counter = 0; counter < 85; counter++) {
+                copy[counter] = 0;
+                }
+            fgets(copy,79,sh);
+            fclose(sh);
+            counter = strnlen(copy,85);
+            counter--;
+            /* Remove :, which is a metacharacter */
+            for(zork = 0; zork <= counter; zork++) {
+                if(copy[zork] == ':') {
+                    copy[zork] = '@';
+                    }
+                }
+            copy[counter] = ':';
+            counter++;
+	    q = 1;
+            }
     else if((argc == 3 && *(argv[1]) == '-' && *(argv[1] + 1) == 'u') ||
        (argc == 5 && *(argv[3]) == '-' && *(argv[3] + 1) == 'u')) {
        counter = 0;
@@ -488,6 +525,12 @@
         for(counter = 1; counter < n; counter++) {
             dwr_rng(rg32);
         }
+	if(q == 1) {
+        	for(counter = 1; counter < n; counter++) {
+        	    dwr_rng(rg32);
+        	}
+        	printf("%08x",dwr_rng(rg32));
+	}
         printf("%08x ",dwr_rng(rg32));
         printf("%d",n);
         printf("\n");
