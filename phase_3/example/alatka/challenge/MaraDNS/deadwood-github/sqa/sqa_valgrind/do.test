#!/bin/sh

# This is a basic Deadwood test to make sure it works and generates no
# problems in Valgrind

killall maradns > /dev/null 2>&1 # Don't run this test on Solaris
sleep 2

cat > mararc << EOF
chroot_dir="$( pwd )"
ipv4_bind_addresses="127.0.0.2"
csv2 = {}
csv2["example.com."] = "db.example.com"
EOF

cat > db.example.com << EOF
*.% A 10.1.2.3
*.% A 10.1.2.4
EOF

# OK, test the server
../../../server/maradns -f mararc > /dev/null 2>&1 &
#../../../server/maradns -f mararc &
sleep 1

# Now, make sure Deadwood works

cat > dwood2rc << EOF
chroot_dir="$( pwd )"
ipv4_bind_addresses="127.0.0.1"
upstream_servers = {}
upstream_servers["."]="127.0.0.2"
recursive_acl="127.0.0.1/16"
maximum_cache_elements=32
cache_file="cache/dw_cache"
tcp_listen=1
filter_rfc1918 = 0
ip4 = {}
ip4["kabah.foo."] = "10.10.10.10"
ip6 = {}
ip6["kabah.foo."] = "fd4d-6172-6144-4e53 0000-0000-0000-1234"
maradns_uid = 65534
maradns_gid = 65534
EOF

# Make the directory to store the cache
mkdir cache
chown nobody cache # Ported to run on Ubuntu 20.04 LTS

# Recompile to not have any Valgrind errors (Valgrind doesn't like how I use
# uninitialized memory as entropy for the random number generator)
CWD=$( pwd )
cd ../../src
export FLAGS="-g -DVALGRIND_NOERRORS"
make -f Makefile.sl6 clean > /dev/null 2>&1
make -f Makefile.sl6 > /dev/null 2>&1
cd $CWD

# Run the resolver 

# I have determined (by having a program list the times Deadwood allocates
# and frees one particular element, and, at the end, listing every time that
# element is still accounted for) that Valgrind sometimes lies about
# memory being "possibly lost"

valgrind ../../src/Deadwood -f dwood2rc 2>&1 |  egrep '(ERROR|lost:)' | \
	perl -pe 's/\(.*\)//' | grep -v possibly | awk '{$1="";print}' &

#valgrind --leak-check=full ../../src/Deadwood -f dwood2rc &

sleep 1
for a in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 \
         22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 ; do

	#askmara -t 1 Acelement${a}.example.com. 127.0.0.1 # DEBUG
	askmara -t 1 Acelement${a}.example.com. 127.0.0.1 > /dev/null
	askmara -t 1 Acelement${a}.example.com. 127.0.0.1 > /dev/null
	sleep 2
	askmara -t 1 Acelement${a}.example.com. 127.0.0.1 > /dev/null
done

sleep 3
# Make sure TCP doesn't leak memory
dig +tcp @127.0.0.1 tcp.example.com. > /dev/null 2>&1
sleep 3
ps auxw | grep valgrind | grep -v grep | awk '{print $2}' | xargs kill
sleep 3
rm -fr cache

killall maradns > /dev/null 2>&1
rm mararc
rm db.example.com
rm dwood2rc
