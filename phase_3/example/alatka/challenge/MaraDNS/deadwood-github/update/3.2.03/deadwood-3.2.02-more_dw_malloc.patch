--- deadwood-3.2.03/src/DwSocket.c.orig	2012-10-28 01:33:29.280479204 -0700
+++ deadwood-3.2.03/src/DwSocket.c	2012-10-28 01:33:43.697330040 -0700
@@ -628,8 +628,8 @@
 
         /* These two items are allocated once and never freed;
          * they are used while the program is running */
-        b_remote = malloc((maxprocs + 1) * sizeof(int));
-        rem = malloc((maxprocs + 1) * sizeof(remote_T));
+        b_remote = dw_malloc((maxprocs + 1) * sizeof(int));
+        rem = dw_malloc((maxprocs + 1) * sizeof(remote_T));
 
         /* Make sure we got that memory */
         if(b_remote == 0) {
--- deadwood-3.2.03/src/DwStr.c.orig	2012-10-28 01:33:29.281471074 -0700
+++ deadwood-3.2.03/src/DwStr.c	2012-10-28 01:34:29.039401507 -0700
@@ -48,7 +48,7 @@
  */
 dw_str *dw_create(uint32_t size) {
         dw_str *new;
-        new = malloc(sizeof(dw_str));
+        new = dw_malloc(sizeof(dw_str));
         if(new == 0) {
                 return 0; /* We should probably give an "aiee" and
                            * exit(1) here */
@@ -57,7 +57,7 @@
                 return 0;
         }
         /* 2 byte cushion to avoid off-by-one security problems */
-        new->str = malloc(size + 2);
+        new->str = dw_malloc(size + 2);
         if(new->str == 0) {
                 free(new);
                 return 0;
@@ -582,7 +582,7 @@
                 return 0;
         }
 
-        out = malloc(obj->len + 3);
+        out = dw_malloc(obj->len + 3);
         for(a = 0; a < obj->len; a++) {
                 *(out + a) = *(obj->str + a);
         }
@@ -1026,7 +1026,7 @@
 
         /* A very ugly, but fast, way to make recvfrom()'s str/len pair
          * in to a dw_str object.  */
-        hack = malloc(sizeof(dw_str));
+        hack = dw_malloc(sizeof(dw_str));
         hack->max = len + 1;
         hack->len = len;
         hack->str = (uint8_t *)raw;
