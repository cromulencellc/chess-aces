--- deadwood-2.9.06/src/DwStr_functions.h	2010-09-03 07:03:38.000000000 -0700
+++ deadwood-2.9.07/src/DwStr_functions.h	2010-09-07 10:08:59.000000000 -0700
@@ -158,6 +158,10 @@
  * the same */
 int dw_issame(dw_str *a, dw_str *b);
 
+/* ASCII case insensitive comparison of two dw_string objects to see if they
+ * are the same.  Same as dw_issame above */
+int dw_issame_case(dw_str *a, dw_str *b);
+
 /* Append one dw_string object to another dw_string.
  * Input: The two dw_string objects
  * Output: 0 on success, -1 on error */
--- deadwood-2.9.06/src/DwStr.c	2010-09-03 07:03:38.000000000 -0700
+++ deadwood-2.9.07/src/DwStr.c	2010-09-07 10:08:01.000000000 -0700
@@ -526,6 +526,36 @@
         return 1;
 }
 
+/* ASCII case insensitive comparison of two dw_string objects to see if they
+ * are the same.  Same as dw_issame above */
+int dw_issame_case(dw_str *a, dw_str *b) {
+        int c = 0;
+	uint8_t ac = 0, bc = 0;
+        if(dw_assert_sanity(a) == -1) {
+                return -1;
+        }
+        if(dw_assert_sanity(b) == -1) {
+                return -1;
+        }
+        if(a->len != b->len) {
+                return 0;
+        }
+        for(c = 0; c < a->len; c++) {
+		ac = *(a->str + c);
+		bc = *(b->str + c);
+		if(ac >= 'A' && ac <= 'Z') {
+			ac += 32;
+		}
+		if(bc >= 'A' && bc <= 'Z') {
+			bc += 32;
+		}
+                if(ac != bc) {
+                        return 0;
+                }
+        }
+        return 1;
+}
+
 /* Append one dw_string object to another dw_string.
  * Input: The two dw_string objects
  * Output: 0 on success, -1 on error */
--- deadwood-2.9.07/src/DwUdpSocket.c.orig	2010-09-07 10:13:02.000000000 -0700
+++ deadwood-2.9.07/src/DwUdpSocket.c	2010-09-07 10:19:56.000000000 -0700
@@ -833,8 +833,13 @@
                 goto catch_verify_dns_packet;
         }
 
-        /* Should we make this case-insensitive? Probably not. */
-        if(dw_issame(question,rem[b].query) != 1) {
+        /* We make this case-insensitive because of the RFCs.
+         * Now, I understand that the best practice would be to randomize
+	 * the case of the query and have a case-sensitive reply; however
+	 * the RFCs alas do not require the remote server to give us a reply
+	 * with the same case. 
+	 */
+        if(dw_issame_case(question,rem[b].query) != 1) {
                 goto catch_verify_dns_packet;
         }
 
