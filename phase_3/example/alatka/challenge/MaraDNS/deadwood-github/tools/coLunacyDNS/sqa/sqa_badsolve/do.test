#!/bin/bash
# Bashism: Job control

. ../testVars

PROG="../../coLunacyDNS"

cat > test.lua << EOF
bindIp = "127.7.7.26" 
logLevel = 1
function processQuery(Q) -- Called for every DNS query received
  if string.sub(Q.coQuery,1,1) == "a" then
    local t = coDNS.solve(false)
    coDNS.log(t.error)
    coDNS.log("Should get here")
    t = coDNS.solve(false)
    coDNS.log("Should never get here")
  elseif string.sub(Q.coQuery,1,1) == "b" then
    local t = coDNS.solve({})
    coDNS.log(t.error)
    coDNS.log("Should get here {}")
    t = coDNS.solve({})
    coDNS.log("Should never get here {}")
  elseif string.sub(Q.coQuery,1,1) == "c" then
    local t = coDNS.solve({type=1})
    coDNS.log(t.error)
    coDNS.log("Should get here {type=1}")
    t = coDNS.solve({})
    coDNS.log("Should never get here {type=1}")
  elseif string.sub(Q.coQuery,1,1) == "d" then
    local t = coDNS.solve({type="foo"})
    coDNS.log(t.error)
    coDNS.log("Should get here {type=foo}")
    t = coDNS.solve({})
    coDNS.log("Should never get here {type=foo}")
  elseif string.sub(Q.coQuery,1,1) == "e" then
    local t = coDNS.solve({type="A"})
    coDNS.log(t.error)
    coDNS.log("Should get here {type=A}")
    t = coDNS.solve({})
    coDNS.log("Should never get here {type=A}")
  elseif string.sub(Q.coQuery,1,1) == "f" then
    local t = coDNS.solve({type="A", upstreamIp4="127.7.7.254", name=
"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqr.foo."})
    coDNS.log(t.error)
    coDNS.log("Should get here (long name)")
    t = coDNS.solve({})
    coDNS.log("Should never get here")
  elseif string.sub(Q.coQuery,1,1) == "g" then
    local t = coDNS.solve({type="A", upstreamIp4="127.7.7.254", name=
			   "nolastdot.invalid"})
    coDNS.log(t.error)
    coDNS.log("Should get here (no last dot)")
    t = coDNS.solve({})
    coDNS.log("Should never get here")
  elseif string.sub(Q.coQuery,1,1) == "h" then
    local t = coDNS.solve({type="A", upstreamIp4="127.7.7.254", name=true})
    coDNS.log(t.error)
    coDNS.log("Should get here (name not string)")
    t = coDNS.solve({})
    coDNS.log("Should never get here")
  end
end
EOF


${PROG} -d test.lua | egrep '[0-9a-zA-Z]' | grep -v version > output.test &
sleep 1

askmara -t 1 Aa.example.com. 127.7.7.26
askmara -t 1 Ab.example.com. 127.7.7.26
askmara -t 1 Ac.example.com. 127.7.7.26
askmara -t 1 Ad.example.com. 127.7.7.26
askmara -t 1 Ae.example.com. 127.7.7.26
askmara -t 1 Af.example.com. 127.7.7.26
askmara -t 1 Ag.example.com. 127.7.7.26
askmara -t 1 Ah.example.com. 127.7.7.26

LIST=$( ps auxw | awk "$PROCGET" | grep "$PROG" | awk '{print $1}' )
for process in $LIST ; do
	kill -ALRM $process
done
sleep 1

if ! cmp output.success output.test > /dev/null 2>&1 ; then
        echo BadSolve Test failed
        exit 255
fi

echo BadSolve test Success
# Clean up
rm test.lua
rm upstream.lua
rm output.test
