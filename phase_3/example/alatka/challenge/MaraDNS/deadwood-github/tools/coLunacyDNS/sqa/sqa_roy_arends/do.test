#!/bin/bash
# Bashism: Job control

. ../testVars
PROG="../../coLunacyDNS"

cat > test.lua << EOF
bindIp = "127.7.7.36" 
bindIp6 = "::1"
function processQuery(Q) -- Called for every DNS query received
  coDNS.log("Query " .. Q.coQuery)
  return {co1Type = "A", co1Data = "10.1.1.1"}
end
EOF

${PROG} -d test.lua | egrep '[A-Za-z0-9]' | grep -v version > output.test2 &
sleep 1

gcc -O3 -o sendpacket-arends sendpacket-arends.c

echo IPv4 > output.test1
./sendpacket-arends 127.7.7.36 >> output.test1
./sendpacket-arends 127.7.7.36 1 >> output.test1
echo IPv6 >> output.test1
./sendpacket-arends ::1 >> output.test1
./sendpacket-arends ::1 1 >> output.test1

LIST=$( ps auxw | awk "$PROCGET" | grep "$PROG" | awk '{print $1}' )
for process in $LIST ; do
	kill -ALRM $process
done
sleep 1
rm test.lua

if ! cmp output.success1 output.test1 > /dev/null 2>&1 ; then
        echo RoyArends Test failed: Client side
        exit 255
fi
if ! cmp output.success2 output.test2 > /dev/null 2>&1 ; then
        echo RoyArends Test failed: Server side
        exit 255
fi

echo RoyArends test Success
rm output.test1
rm output.test2
rm sendpacket-arends
