#!/bin/bash
# Bashism: Job control

. ../testVars

PROG="../../coLunacyDNS"

cat > upstream.lua << EOF
bindIp = "127.7.7.46" 
function processQuery(Q) -- Called for every DNS query received
  return {co1Type = "A", co1Data = "10.1.1.1"}
end
EOF
cat > test.lua << EOF
bindIp = "127.7.7.47" 
logLevel = 5
function processQuery(Q) -- Called for every DNS query received
   local line = coDNS.read1()
   if line then coDNS.log(line) else coDNS.log("read1 error1") end
   local u = "127.7.7.46"
   local t = {}
   if string.sub(Q.coQuery,1,1) == "a" then
     gCovNoOpenDNS = 1
     coDNS.open1("upstream.lua")
     line = coDNS.read1()
     if line then coDNS.log(line) else coDNS.log("read1 error2") end
     t = coDNS.solve({name=Q.coQuery, type="A", upstreamIp4=u})
     line = coDNS.read1()
     if line then coDNS.log(line) else coDNS.log("read1 error3") end
     coDNS.open1("upstream.lua")
     gCovNoOpenDNS = 0
   elseif string.sub(Q.coQuery,1,1) == "b" then
     t = coDNS.solve({name=Q.coQuery, type="A", upstreamIp4=u})
     gCovNoOpenDNS = 1
     t = coDNS.solve({name=Q.coQuery, type="A", upstreamIp4=u})
     coDNS.open1("upstream.lua")
     gCovNoOpenDNS = 0
   elseif string.sub(Q.coQuery,1,1) == "c" then
     gCovNoOpenDNS = 0
     t = coDNS.solve({name=Q.coQuery, type="A", upstreamIp4=u})
     t = coDNS.solve({name=Q.coQuery, type="A", upstreamIp4=u})
   elseif string.sub(Q.coQuery,1,1) == "d" then
     coDNS.log("We should get here")
     foo["bar"] = baz
     t.error = true
     coDNS.log("We should not get here")
   end
   -- Return a "server fail" if we did not get an answer
   if(t.error or t.status ~= 1) then return {co1Type = "serverFail"} end
   -- Otherwise, return the answer
   return {co1Type = "A", co1Data = t.answer}
end
EOF

${PROG} -d test.lua |egrep '[A-Za-z0-9]' | grep -v version > output.test1 &
${PROG} -d upstream.lua &
sleep 1

rm -f output.test2
touch output.test2
askmara -t 2 Aa.example.com. 127.7.7.47 >> output.test2
askmara -t 2 Ab.example.com. 127.7.7.47 >> output.test2
askmara -t 2 Ac.example.com. 127.7.7.47 >> output.test2
askmara -t 2 Ad.example.com. 127.7.7.47 >> output.test2

LIST=$( ps auxw | awk "$PROCGET" | grep "$PROG" | awk '{print $1}' )
for process in $LIST ; do
	kill -ALRM $process
done
sleep 1

if ! cmp output.success1 output.test1 > /dev/null 2>&1 ; then
        echo gCovNoOpenDNS test failed: Server side
        exit 255
fi
if ! cmp output.success2 output.test2 > /dev/null 2>&1 ; then
        echo gCovNoOpenDNS test failed: Server side
        exit 255
fi

echo gCovNoOpenDNS test Success
# Clean up
rm test.lua
rm upstream.lua
rm output.test1 output.test2
